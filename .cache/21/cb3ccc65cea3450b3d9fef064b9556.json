{"id":"../node_modules/@formatjs/icu-skeleton-parser/number.js","dependencies":[{"name":"E:\\Proyects\\ReactJS\\threetwicesix\\package.json","includedInParent":true,"mtime":1619436981193},{"name":"E:\\Proyects\\ReactJS\\threetwicesix\\node_modules\\@formatjs\\icu-skeleton-parser\\package.json","includedInParent":true,"mtime":1619287477318},{"name":"tslib","loc":{"line":4,"column":22},"parent":"E:\\Proyects\\ReactJS\\threetwicesix\\node_modules\\@formatjs\\icu-skeleton-parser\\number.js","resolved":"E:\\Proyects\\ReactJS\\threetwicesix\\node_modules\\tslib\\tslib.es6.js"},{"name":"./regex.generated","loc":{"line":5,"column":32},"parent":"E:\\Proyects\\ReactJS\\threetwicesix\\node_modules\\@formatjs\\icu-skeleton-parser\\number.js","resolved":"E:\\Proyects\\ReactJS\\threetwicesix\\node_modules\\@formatjs\\icu-skeleton-parser\\regex.generated.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseNumberSkeleton = exports.parseNumberSkeletonFromString = void 0;\nvar tslib_1 = require(\"tslib\");\nvar regex_generated_1 = require(\"./regex.generated\");\nfunction parseNumberSkeletonFromString(skeleton) {\n    if (skeleton.length === 0) {\n        throw new Error('Number skeleton cannot be empty');\n    }\n    // Parse the skeleton\n    var stringTokens = skeleton\n        .split(regex_generated_1.WHITE_SPACE_REGEX)\n        .filter(function (x) { return x.length > 0; });\n    var tokens = [];\n    for (var _i = 0, stringTokens_1 = stringTokens; _i < stringTokens_1.length; _i++) {\n        var stringToken = stringTokens_1[_i];\n        var stemAndOptions = stringToken.split('/');\n        if (stemAndOptions.length === 0) {\n            throw new Error('Invalid number skeleton');\n        }\n        var stem = stemAndOptions[0], options = stemAndOptions.slice(1);\n        for (var _a = 0, options_1 = options; _a < options_1.length; _a++) {\n            var option = options_1[_a];\n            if (option.length === 0) {\n                throw new Error('Invalid number skeleton');\n            }\n        }\n        tokens.push({ stem: stem, options: options });\n    }\n    return tokens;\n}\nexports.parseNumberSkeletonFromString = parseNumberSkeletonFromString;\nfunction icuUnitToEcma(unit) {\n    return unit.replace(/^(.*?)-/, '');\n}\nvar FRACTION_PRECISION_REGEX = /^\\.(?:(0+)(\\*)?|(#+)|(0+)(#+))$/g;\nvar SIGNIFICANT_PRECISION_REGEX = /^(@+)?(\\+|#+)?$/g;\nvar INTEGER_WIDTH_REGEX = /(\\*)(0+)|(#+)(0+)|(0+)/g;\nvar CONCISE_INTEGER_WIDTH_REGEX = /^(0+)$/;\nfunction parseSignificantPrecision(str) {\n    var result = {};\n    str.replace(SIGNIFICANT_PRECISION_REGEX, function (_, g1, g2) {\n        // @@@ case\n        if (typeof g2 !== 'string') {\n            result.minimumSignificantDigits = g1.length;\n            result.maximumSignificantDigits = g1.length;\n        }\n        // @@@+ case\n        else if (g2 === '+') {\n            result.minimumSignificantDigits = g1.length;\n        }\n        // .### case\n        else if (g1[0] === '#') {\n            result.maximumSignificantDigits = g1.length;\n        }\n        // .@@## or .@@@ case\n        else {\n            result.minimumSignificantDigits = g1.length;\n            result.maximumSignificantDigits =\n                g1.length + (typeof g2 === 'string' ? g2.length : 0);\n        }\n        return '';\n    });\n    return result;\n}\nfunction parseSign(str) {\n    switch (str) {\n        case 'sign-auto':\n            return {\n                signDisplay: 'auto',\n            };\n        case 'sign-accounting':\n        case '()':\n            return {\n                currencySign: 'accounting',\n            };\n        case 'sign-always':\n        case '+!':\n            return {\n                signDisplay: 'always',\n            };\n        case 'sign-accounting-always':\n        case '()!':\n            return {\n                signDisplay: 'always',\n                currencySign: 'accounting',\n            };\n        case 'sign-except-zero':\n        case '+?':\n            return {\n                signDisplay: 'exceptZero',\n            };\n        case 'sign-accounting-except-zero':\n        case '()?':\n            return {\n                signDisplay: 'exceptZero',\n                currencySign: 'accounting',\n            };\n        case 'sign-never':\n        case '+_':\n            return {\n                signDisplay: 'never',\n            };\n    }\n}\nfunction parseConciseScientificAndEngineeringStem(stem) {\n    // Engineering\n    var result;\n    if (stem[0] === 'E' && stem[1] === 'E') {\n        result = {\n            notation: 'engineering',\n        };\n        stem = stem.slice(2);\n    }\n    else if (stem[0] === 'E') {\n        result = {\n            notation: 'scientific',\n        };\n        stem = stem.slice(1);\n    }\n    if (result) {\n        var signDisplay = stem.slice(0, 2);\n        if (signDisplay === '+!') {\n            result.signDisplay = 'always';\n            stem = stem.slice(2);\n        }\n        else if (signDisplay === '+?') {\n            result.signDisplay = 'exceptZero';\n            stem = stem.slice(2);\n        }\n        if (!CONCISE_INTEGER_WIDTH_REGEX.test(stem)) {\n            throw new Error('Malformed concise eng/scientific notation');\n        }\n        result.minimumIntegerDigits = stem.length;\n    }\n    return result;\n}\nfunction parseNotationOptions(opt) {\n    var result = {};\n    var signOpts = parseSign(opt);\n    if (signOpts) {\n        return signOpts;\n    }\n    return result;\n}\n/**\n * https://github.com/unicode-org/icu/blob/master/docs/userguide/format_parse/numbers/skeletons.md#skeleton-stems-and-options\n */\nfunction parseNumberSkeleton(tokens) {\n    var result = {};\n    for (var _i = 0, tokens_1 = tokens; _i < tokens_1.length; _i++) {\n        var token = tokens_1[_i];\n        switch (token.stem) {\n            case 'percent':\n            case '%':\n                result.style = 'percent';\n                continue;\n            case '%x100':\n                result.style = 'percent';\n                result.scale = 100;\n                continue;\n            case 'currency':\n                result.style = 'currency';\n                result.currency = token.options[0];\n                continue;\n            case 'group-off':\n            case ',_':\n                result.useGrouping = false;\n                continue;\n            case 'precision-integer':\n            case '.':\n                result.maximumFractionDigits = 0;\n                continue;\n            case 'measure-unit':\n            case 'unit':\n                result.style = 'unit';\n                result.unit = icuUnitToEcma(token.options[0]);\n                continue;\n            case 'compact-short':\n            case 'K':\n                result.notation = 'compact';\n                result.compactDisplay = 'short';\n                continue;\n            case 'compact-long':\n            case 'KK':\n                result.notation = 'compact';\n                result.compactDisplay = 'long';\n                continue;\n            case 'scientific':\n                result = tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({}, result), { notation: 'scientific' }), token.options.reduce(function (all, opt) { return (tslib_1.__assign(tslib_1.__assign({}, all), parseNotationOptions(opt))); }, {}));\n                continue;\n            case 'engineering':\n                result = tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({}, result), { notation: 'engineering' }), token.options.reduce(function (all, opt) { return (tslib_1.__assign(tslib_1.__assign({}, all), parseNotationOptions(opt))); }, {}));\n                continue;\n            case 'notation-simple':\n                result.notation = 'standard';\n                continue;\n            // https://github.com/unicode-org/icu/blob/master/icu4c/source/i18n/unicode/unumberformatter.h\n            case 'unit-width-narrow':\n                result.currencyDisplay = 'narrowSymbol';\n                result.unitDisplay = 'narrow';\n                continue;\n            case 'unit-width-short':\n                result.currencyDisplay = 'code';\n                result.unitDisplay = 'short';\n                continue;\n            case 'unit-width-full-name':\n                result.currencyDisplay = 'name';\n                result.unitDisplay = 'long';\n                continue;\n            case 'unit-width-iso-code':\n                result.currencyDisplay = 'symbol';\n                continue;\n            case 'scale':\n                result.scale = parseFloat(token.options[0]);\n                continue;\n            // https://unicode-org.github.io/icu/userguide/format_parse/numbers/skeletons.html#integer-width\n            case 'integer-width':\n                if (token.options.length > 1) {\n                    throw new RangeError('integer-width stems only accept a single optional option');\n                }\n                token.options[0].replace(INTEGER_WIDTH_REGEX, function (_, g1, g2, g3, g4, g5) {\n                    if (g1) {\n                        result.minimumIntegerDigits = g2.length;\n                    }\n                    else if (g3 && g4) {\n                        throw new Error('We currently do not support maximum integer digits');\n                    }\n                    else if (g5) {\n                        throw new Error('We currently do not support exact integer digits');\n                    }\n                    return '';\n                });\n                continue;\n        }\n        // https://unicode-org.github.io/icu/userguide/format_parse/numbers/skeletons.html#integer-width\n        if (CONCISE_INTEGER_WIDTH_REGEX.test(token.stem)) {\n            result.minimumIntegerDigits = token.stem.length;\n            continue;\n        }\n        if (FRACTION_PRECISION_REGEX.test(token.stem)) {\n            // Precision\n            // https://unicode-org.github.io/icu/userguide/format_parse/numbers/skeletons.html#fraction-precision\n            // precision-integer case\n            if (token.options.length > 1) {\n                throw new RangeError('Fraction-precision stems only accept a single optional option');\n            }\n            token.stem.replace(FRACTION_PRECISION_REGEX, function (_, g1, g2, g3, g4, g5) {\n                // .000* case (before ICU67 it was .000+)\n                if (g2 === '*') {\n                    result.minimumFractionDigits = g1.length;\n                }\n                // .### case\n                else if (g3 && g3[0] === '#') {\n                    result.maximumFractionDigits = g3.length;\n                }\n                // .00## case\n                else if (g4 && g5) {\n                    result.minimumFractionDigits = g4.length;\n                    result.maximumFractionDigits = g4.length + g5.length;\n                }\n                else {\n                    result.minimumFractionDigits = g1.length;\n                    result.maximumFractionDigits = g1.length;\n                }\n                return '';\n            });\n            if (token.options.length) {\n                result = tslib_1.__assign(tslib_1.__assign({}, result), parseSignificantPrecision(token.options[0]));\n            }\n            continue;\n        }\n        // https://unicode-org.github.io/icu/userguide/format_parse/numbers/skeletons.html#significant-digits-precision\n        if (SIGNIFICANT_PRECISION_REGEX.test(token.stem)) {\n            result = tslib_1.__assign(tslib_1.__assign({}, result), parseSignificantPrecision(token.stem));\n            continue;\n        }\n        var signOpts = parseSign(token.stem);\n        if (signOpts) {\n            result = tslib_1.__assign(tslib_1.__assign({}, result), signOpts);\n        }\n        var conciseScientificAndEngineeringOpts = parseConciseScientificAndEngineeringStem(token.stem);\n        if (conciseScientificAndEngineeringOpts) {\n            result = tslib_1.__assign(tslib_1.__assign({}, result), conciseScientificAndEngineeringOpts);\n        }\n    }\n    return result;\n}\nexports.parseNumberSkeleton = parseNumberSkeleton;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"../node_modules/@formatjs/icu-skeleton-parser/number.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}}],"sources":{"../node_modules/@formatjs/icu-skeleton-parser/number.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseNumberSkeleton = exports.parseNumberSkeletonFromString = void 0;\nvar tslib_1 = require(\"tslib\");\nvar regex_generated_1 = require(\"./regex.generated\");\nfunction parseNumberSkeletonFromString(skeleton) {\n    if (skeleton.length === 0) {\n        throw new Error('Number skeleton cannot be empty');\n    }\n    // Parse the skeleton\n    var stringTokens = skeleton\n        .split(regex_generated_1.WHITE_SPACE_REGEX)\n        .filter(function (x) { return x.length > 0; });\n    var tokens = [];\n    for (var _i = 0, stringTokens_1 = stringTokens; _i < stringTokens_1.length; _i++) {\n        var stringToken = stringTokens_1[_i];\n        var stemAndOptions = stringToken.split('/');\n        if (stemAndOptions.length === 0) {\n            throw new Error('Invalid number skeleton');\n        }\n        var stem = stemAndOptions[0], options = stemAndOptions.slice(1);\n        for (var _a = 0, options_1 = options; _a < options_1.length; _a++) {\n            var option = options_1[_a];\n            if (option.length === 0) {\n                throw new Error('Invalid number skeleton');\n            }\n        }\n        tokens.push({ stem: stem, options: options });\n    }\n    return tokens;\n}\nexports.parseNumberSkeletonFromString = parseNumberSkeletonFromString;\nfunction icuUnitToEcma(unit) {\n    return unit.replace(/^(.*?)-/, '');\n}\nvar FRACTION_PRECISION_REGEX = /^\\.(?:(0+)(\\*)?|(#+)|(0+)(#+))$/g;\nvar SIGNIFICANT_PRECISION_REGEX = /^(@+)?(\\+|#+)?$/g;\nvar INTEGER_WIDTH_REGEX = /(\\*)(0+)|(#+)(0+)|(0+)/g;\nvar CONCISE_INTEGER_WIDTH_REGEX = /^(0+)$/;\nfunction parseSignificantPrecision(str) {\n    var result = {};\n    str.replace(SIGNIFICANT_PRECISION_REGEX, function (_, g1, g2) {\n        // @@@ case\n        if (typeof g2 !== 'string') {\n            result.minimumSignificantDigits = g1.length;\n            result.maximumSignificantDigits = g1.length;\n        }\n        // @@@+ case\n        else if (g2 === '+') {\n            result.minimumSignificantDigits = g1.length;\n        }\n        // .### case\n        else if (g1[0] === '#') {\n            result.maximumSignificantDigits = g1.length;\n        }\n        // .@@## or .@@@ case\n        else {\n            result.minimumSignificantDigits = g1.length;\n            result.maximumSignificantDigits =\n                g1.length + (typeof g2 === 'string' ? g2.length : 0);\n        }\n        return '';\n    });\n    return result;\n}\nfunction parseSign(str) {\n    switch (str) {\n        case 'sign-auto':\n            return {\n                signDisplay: 'auto',\n            };\n        case 'sign-accounting':\n        case '()':\n            return {\n                currencySign: 'accounting',\n            };\n        case 'sign-always':\n        case '+!':\n            return {\n                signDisplay: 'always',\n            };\n        case 'sign-accounting-always':\n        case '()!':\n            return {\n                signDisplay: 'always',\n                currencySign: 'accounting',\n            };\n        case 'sign-except-zero':\n        case '+?':\n            return {\n                signDisplay: 'exceptZero',\n            };\n        case 'sign-accounting-except-zero':\n        case '()?':\n            return {\n                signDisplay: 'exceptZero',\n                currencySign: 'accounting',\n            };\n        case 'sign-never':\n        case '+_':\n            return {\n                signDisplay: 'never',\n            };\n    }\n}\nfunction parseConciseScientificAndEngineeringStem(stem) {\n    // Engineering\n    var result;\n    if (stem[0] === 'E' && stem[1] === 'E') {\n        result = {\n            notation: 'engineering',\n        };\n        stem = stem.slice(2);\n    }\n    else if (stem[0] === 'E') {\n        result = {\n            notation: 'scientific',\n        };\n        stem = stem.slice(1);\n    }\n    if (result) {\n        var signDisplay = stem.slice(0, 2);\n        if (signDisplay === '+!') {\n            result.signDisplay = 'always';\n            stem = stem.slice(2);\n        }\n        else if (signDisplay === '+?') {\n            result.signDisplay = 'exceptZero';\n            stem = stem.slice(2);\n        }\n        if (!CONCISE_INTEGER_WIDTH_REGEX.test(stem)) {\n            throw new Error('Malformed concise eng/scientific notation');\n        }\n        result.minimumIntegerDigits = stem.length;\n    }\n    return result;\n}\nfunction parseNotationOptions(opt) {\n    var result = {};\n    var signOpts = parseSign(opt);\n    if (signOpts) {\n        return signOpts;\n    }\n    return result;\n}\n/**\n * https://github.com/unicode-org/icu/blob/master/docs/userguide/format_parse/numbers/skeletons.md#skeleton-stems-and-options\n */\nfunction parseNumberSkeleton(tokens) {\n    var result = {};\n    for (var _i = 0, tokens_1 = tokens; _i < tokens_1.length; _i++) {\n        var token = tokens_1[_i];\n        switch (token.stem) {\n            case 'percent':\n            case '%':\n                result.style = 'percent';\n                continue;\n            case '%x100':\n                result.style = 'percent';\n                result.scale = 100;\n                continue;\n            case 'currency':\n                result.style = 'currency';\n                result.currency = token.options[0];\n                continue;\n            case 'group-off':\n            case ',_':\n                result.useGrouping = false;\n                continue;\n            case 'precision-integer':\n            case '.':\n                result.maximumFractionDigits = 0;\n                continue;\n            case 'measure-unit':\n            case 'unit':\n                result.style = 'unit';\n                result.unit = icuUnitToEcma(token.options[0]);\n                continue;\n            case 'compact-short':\n            case 'K':\n                result.notation = 'compact';\n                result.compactDisplay = 'short';\n                continue;\n            case 'compact-long':\n            case 'KK':\n                result.notation = 'compact';\n                result.compactDisplay = 'long';\n                continue;\n            case 'scientific':\n                result = tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({}, result), { notation: 'scientific' }), token.options.reduce(function (all, opt) { return (tslib_1.__assign(tslib_1.__assign({}, all), parseNotationOptions(opt))); }, {}));\n                continue;\n            case 'engineering':\n                result = tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({}, result), { notation: 'engineering' }), token.options.reduce(function (all, opt) { return (tslib_1.__assign(tslib_1.__assign({}, all), parseNotationOptions(opt))); }, {}));\n                continue;\n            case 'notation-simple':\n                result.notation = 'standard';\n                continue;\n            // https://github.com/unicode-org/icu/blob/master/icu4c/source/i18n/unicode/unumberformatter.h\n            case 'unit-width-narrow':\n                result.currencyDisplay = 'narrowSymbol';\n                result.unitDisplay = 'narrow';\n                continue;\n            case 'unit-width-short':\n                result.currencyDisplay = 'code';\n                result.unitDisplay = 'short';\n                continue;\n            case 'unit-width-full-name':\n                result.currencyDisplay = 'name';\n                result.unitDisplay = 'long';\n                continue;\n            case 'unit-width-iso-code':\n                result.currencyDisplay = 'symbol';\n                continue;\n            case 'scale':\n                result.scale = parseFloat(token.options[0]);\n                continue;\n            // https://unicode-org.github.io/icu/userguide/format_parse/numbers/skeletons.html#integer-width\n            case 'integer-width':\n                if (token.options.length > 1) {\n                    throw new RangeError('integer-width stems only accept a single optional option');\n                }\n                token.options[0].replace(INTEGER_WIDTH_REGEX, function (_, g1, g2, g3, g4, g5) {\n                    if (g1) {\n                        result.minimumIntegerDigits = g2.length;\n                    }\n                    else if (g3 && g4) {\n                        throw new Error('We currently do not support maximum integer digits');\n                    }\n                    else if (g5) {\n                        throw new Error('We currently do not support exact integer digits');\n                    }\n                    return '';\n                });\n                continue;\n        }\n        // https://unicode-org.github.io/icu/userguide/format_parse/numbers/skeletons.html#integer-width\n        if (CONCISE_INTEGER_WIDTH_REGEX.test(token.stem)) {\n            result.minimumIntegerDigits = token.stem.length;\n            continue;\n        }\n        if (FRACTION_PRECISION_REGEX.test(token.stem)) {\n            // Precision\n            // https://unicode-org.github.io/icu/userguide/format_parse/numbers/skeletons.html#fraction-precision\n            // precision-integer case\n            if (token.options.length > 1) {\n                throw new RangeError('Fraction-precision stems only accept a single optional option');\n            }\n            token.stem.replace(FRACTION_PRECISION_REGEX, function (_, g1, g2, g3, g4, g5) {\n                // .000* case (before ICU67 it was .000+)\n                if (g2 === '*') {\n                    result.minimumFractionDigits = g1.length;\n                }\n                // .### case\n                else if (g3 && g3[0] === '#') {\n                    result.maximumFractionDigits = g3.length;\n                }\n                // .00## case\n                else if (g4 && g5) {\n                    result.minimumFractionDigits = g4.length;\n                    result.maximumFractionDigits = g4.length + g5.length;\n                }\n                else {\n                    result.minimumFractionDigits = g1.length;\n                    result.maximumFractionDigits = g1.length;\n                }\n                return '';\n            });\n            if (token.options.length) {\n                result = tslib_1.__assign(tslib_1.__assign({}, result), parseSignificantPrecision(token.options[0]));\n            }\n            continue;\n        }\n        // https://unicode-org.github.io/icu/userguide/format_parse/numbers/skeletons.html#significant-digits-precision\n        if (SIGNIFICANT_PRECISION_REGEX.test(token.stem)) {\n            result = tslib_1.__assign(tslib_1.__assign({}, result), parseSignificantPrecision(token.stem));\n            continue;\n        }\n        var signOpts = parseSign(token.stem);\n        if (signOpts) {\n            result = tslib_1.__assign(tslib_1.__assign({}, result), signOpts);\n        }\n        var conciseScientificAndEngineeringOpts = parseConciseScientificAndEngineeringStem(token.stem);\n        if (conciseScientificAndEngineeringOpts) {\n            result = tslib_1.__assign(tslib_1.__assign({}, result), conciseScientificAndEngineeringOpts);\n        }\n    }\n    return result;\n}\nexports.parseNumberSkeleton = parseNumberSkeleton;\n"},"lineCount":290}},"error":null,"hash":"683789a1ff845842fdf36a4129c20a4d","cacheData":{"env":{}}}