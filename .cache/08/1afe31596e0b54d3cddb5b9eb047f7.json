{"id":"../node_modules/@formatjs/icu-messageformat-parser/error.js","dependencies":[{"name":"E:\\Proyects\\ReactJS\\threetwicesix\\package.json","includedInParent":true,"mtime":1619914331923},{"name":"E:\\Proyects\\ReactJS\\threetwicesix\\node_modules\\@formatjs\\icu-messageformat-parser\\package.json","includedInParent":true,"mtime":1619287476881}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ErrorKind = void 0;\nvar ErrorKind;\n(function (ErrorKind) {\n    /** Argument is unclosed (e.g. `{0`) */\n    ErrorKind[ErrorKind[\"EXPECT_ARGUMENT_CLOSING_BRACE\"] = 1] = \"EXPECT_ARGUMENT_CLOSING_BRACE\";\n    /** Argument is empty (e.g. `{}`). */\n    ErrorKind[ErrorKind[\"EMPTY_ARGUMENT\"] = 2] = \"EMPTY_ARGUMENT\";\n    /** Argument is malformed (e.g. `{foo!}``) */\n    ErrorKind[ErrorKind[\"MALFORMED_ARGUMENT\"] = 3] = \"MALFORMED_ARGUMENT\";\n    /** Expect an argument type (e.g. `{foo,}`) */\n    ErrorKind[ErrorKind[\"EXPECT_ARGUMENT_TYPE\"] = 4] = \"EXPECT_ARGUMENT_TYPE\";\n    /** Unsupported argument type (e.g. `{foo,foo}`) */\n    ErrorKind[ErrorKind[\"INVALID_ARGUMENT_TYPE\"] = 5] = \"INVALID_ARGUMENT_TYPE\";\n    /** Expect an argument style (e.g. `{foo, number, }`) */\n    ErrorKind[ErrorKind[\"EXPECT_ARGUMENT_STYLE\"] = 6] = \"EXPECT_ARGUMENT_STYLE\";\n    /** The number skeleton is invalid. */\n    ErrorKind[ErrorKind[\"INVALID_NUMBER_SKELETON\"] = 7] = \"INVALID_NUMBER_SKELETON\";\n    /** The date time skeleton is invalid. */\n    ErrorKind[ErrorKind[\"INVALID_DATE_TIME_SKELETON\"] = 8] = \"INVALID_DATE_TIME_SKELETON\";\n    /** Exepct a number skeleton following the `::` (e.g. `{foo, number, ::}`) */\n    ErrorKind[ErrorKind[\"EXPECT_NUMBER_SKELETON\"] = 9] = \"EXPECT_NUMBER_SKELETON\";\n    /** Exepct a date time skeleton following the `::` (e.g. `{foo, date, ::}`) */\n    ErrorKind[ErrorKind[\"EXPECT_DATE_TIME_SKELETON\"] = 10] = \"EXPECT_DATE_TIME_SKELETON\";\n    /** Unmatched apostrophes in the argument style (e.g. `{foo, number, 'test`) */\n    ErrorKind[ErrorKind[\"UNCLOSED_QUOTE_IN_ARGUMENT_STYLE\"] = 11] = \"UNCLOSED_QUOTE_IN_ARGUMENT_STYLE\";\n    /** Missing select argument options (e.g. `{foo, select}`) */\n    ErrorKind[ErrorKind[\"EXPECT_SELECT_ARGUMENT_OPTIONS\"] = 12] = \"EXPECT_SELECT_ARGUMENT_OPTIONS\";\n    /** Expecting an offset value in `plural` or `selectordinal` argument (e.g `{foo, plural, offset}`) */\n    ErrorKind[ErrorKind[\"EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE\"] = 13] = \"EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE\";\n    /** Offset value in `plural` or `selectordinal` is invalid (e.g. `{foo, plural, offset: x}`) */\n    ErrorKind[ErrorKind[\"INVALID_PLURAL_ARGUMENT_OFFSET_VALUE\"] = 14] = \"INVALID_PLURAL_ARGUMENT_OFFSET_VALUE\";\n    /** Expecting a selector in `select` argument (e.g `{foo, select}`) */\n    ErrorKind[ErrorKind[\"EXPECT_SELECT_ARGUMENT_SELECTOR\"] = 15] = \"EXPECT_SELECT_ARGUMENT_SELECTOR\";\n    /** Expecting a selector in `plural` or `selectordinal` argument (e.g `{foo, plural}`) */\n    ErrorKind[ErrorKind[\"EXPECT_PLURAL_ARGUMENT_SELECTOR\"] = 16] = \"EXPECT_PLURAL_ARGUMENT_SELECTOR\";\n    /** Expecting a message fragment after the `select` selector (e.g. `{foo, select, apple}`) */\n    ErrorKind[ErrorKind[\"EXPECT_SELECT_ARGUMENT_SELECTOR_FRAGMENT\"] = 17] = \"EXPECT_SELECT_ARGUMENT_SELECTOR_FRAGMENT\";\n    /**\n     * Expecting a message fragment after the `plural` or `selectordinal` selector\n     * (e.g. `{foo, plural, one}`)\n     */\n    ErrorKind[ErrorKind[\"EXPECT_PLURAL_ARGUMENT_SELECTOR_FRAGMENT\"] = 18] = \"EXPECT_PLURAL_ARGUMENT_SELECTOR_FRAGMENT\";\n    /** Selector in `plural` or `selectordinal` is malformed (e.g. `{foo, plural, =x {#}}`) */\n    ErrorKind[ErrorKind[\"INVALID_PLURAL_ARGUMENT_SELECTOR\"] = 19] = \"INVALID_PLURAL_ARGUMENT_SELECTOR\";\n    /**\n     * Duplicate selectors in `plural` or `selectordinal` argument.\n     * (e.g. {foo, plural, one {#} one {#}})\n     */\n    ErrorKind[ErrorKind[\"DUPLICATE_PLURAL_ARGUMENT_SELECTOR\"] = 20] = \"DUPLICATE_PLURAL_ARGUMENT_SELECTOR\";\n    /** Duplicate selectors in `select` argument.\n     * (e.g. {foo, select, apple {apple} apple {apple}})\n     */\n    ErrorKind[ErrorKind[\"DUPLICATE_SELECT_ARGUMENT_SELECTOR\"] = 21] = \"DUPLICATE_SELECT_ARGUMENT_SELECTOR\";\n    /** Plural or select argument option must have `other` clause. */\n    ErrorKind[ErrorKind[\"MISSING_OTHER_CLAUSE\"] = 22] = \"MISSING_OTHER_CLAUSE\";\n    /** The tag is malformed. (e.g. `<bold!>foo</bold!>) */\n    ErrorKind[ErrorKind[\"INVALID_TAG\"] = 23] = \"INVALID_TAG\";\n    /** The tag name is invalid. (e.g. `<123>foo</123>`) */\n    ErrorKind[ErrorKind[\"INVALID_TAG_NAME\"] = 25] = \"INVALID_TAG_NAME\";\n    /** The closing tag does not match the opening tag. (e.g. `<bold>foo</italic>`) */\n    ErrorKind[ErrorKind[\"UNMATCHED_CLOSING_TAG\"] = 26] = \"UNMATCHED_CLOSING_TAG\";\n    /** The opening tag has unmatched closing tag. (e.g. `<bold>foo`) */\n    ErrorKind[ErrorKind[\"UNCLOSED_TAG\"] = 27] = \"UNCLOSED_TAG\";\n})(ErrorKind = exports.ErrorKind || (exports.ErrorKind = {}));\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/@formatjs/icu-messageformat-parser/error.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/@formatjs/icu-messageformat-parser/error.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/@formatjs/icu-messageformat-parser/error.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/@formatjs/icu-messageformat-parser/error.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/@formatjs/icu-messageformat-parser/error.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/@formatjs/icu-messageformat-parser/error.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/@formatjs/icu-messageformat-parser/error.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/@formatjs/icu-messageformat-parser/error.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/@formatjs/icu-messageformat-parser/error.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/@formatjs/icu-messageformat-parser/error.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/@formatjs/icu-messageformat-parser/error.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/@formatjs/icu-messageformat-parser/error.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/@formatjs/icu-messageformat-parser/error.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/@formatjs/icu-messageformat-parser/error.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/@formatjs/icu-messageformat-parser/error.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/@formatjs/icu-messageformat-parser/error.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/@formatjs/icu-messageformat-parser/error.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/@formatjs/icu-messageformat-parser/error.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/@formatjs/icu-messageformat-parser/error.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/@formatjs/icu-messageformat-parser/error.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/@formatjs/icu-messageformat-parser/error.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/@formatjs/icu-messageformat-parser/error.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/@formatjs/icu-messageformat-parser/error.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/@formatjs/icu-messageformat-parser/error.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/@formatjs/icu-messageformat-parser/error.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/@formatjs/icu-messageformat-parser/error.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/@formatjs/icu-messageformat-parser/error.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/@formatjs/icu-messageformat-parser/error.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/@formatjs/icu-messageformat-parser/error.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/@formatjs/icu-messageformat-parser/error.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/@formatjs/icu-messageformat-parser/error.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/@formatjs/icu-messageformat-parser/error.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/@formatjs/icu-messageformat-parser/error.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/@formatjs/icu-messageformat-parser/error.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/@formatjs/icu-messageformat-parser/error.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/@formatjs/icu-messageformat-parser/error.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/@formatjs/icu-messageformat-parser/error.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/@formatjs/icu-messageformat-parser/error.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/@formatjs/icu-messageformat-parser/error.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/@formatjs/icu-messageformat-parser/error.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/@formatjs/icu-messageformat-parser/error.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/@formatjs/icu-messageformat-parser/error.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/@formatjs/icu-messageformat-parser/error.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/@formatjs/icu-messageformat-parser/error.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/@formatjs/icu-messageformat-parser/error.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/@formatjs/icu-messageformat-parser/error.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/@formatjs/icu-messageformat-parser/error.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/@formatjs/icu-messageformat-parser/error.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/@formatjs/icu-messageformat-parser/error.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/@formatjs/icu-messageformat-parser/error.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/@formatjs/icu-messageformat-parser/error.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/@formatjs/icu-messageformat-parser/error.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/@formatjs/icu-messageformat-parser/error.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/@formatjs/icu-messageformat-parser/error.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/@formatjs/icu-messageformat-parser/error.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/@formatjs/icu-messageformat-parser/error.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/@formatjs/icu-messageformat-parser/error.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/@formatjs/icu-messageformat-parser/error.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/@formatjs/icu-messageformat-parser/error.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/@formatjs/icu-messageformat-parser/error.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/@formatjs/icu-messageformat-parser/error.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/@formatjs/icu-messageformat-parser/error.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/@formatjs/icu-messageformat-parser/error.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/@formatjs/icu-messageformat-parser/error.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/@formatjs/icu-messageformat-parser/error.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/@formatjs/icu-messageformat-parser/error.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/@formatjs/icu-messageformat-parser/error.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}}],"sources":{"../node_modules/@formatjs/icu-messageformat-parser/error.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ErrorKind = void 0;\nvar ErrorKind;\n(function (ErrorKind) {\n    /** Argument is unclosed (e.g. `{0`) */\n    ErrorKind[ErrorKind[\"EXPECT_ARGUMENT_CLOSING_BRACE\"] = 1] = \"EXPECT_ARGUMENT_CLOSING_BRACE\";\n    /** Argument is empty (e.g. `{}`). */\n    ErrorKind[ErrorKind[\"EMPTY_ARGUMENT\"] = 2] = \"EMPTY_ARGUMENT\";\n    /** Argument is malformed (e.g. `{foo!}``) */\n    ErrorKind[ErrorKind[\"MALFORMED_ARGUMENT\"] = 3] = \"MALFORMED_ARGUMENT\";\n    /** Expect an argument type (e.g. `{foo,}`) */\n    ErrorKind[ErrorKind[\"EXPECT_ARGUMENT_TYPE\"] = 4] = \"EXPECT_ARGUMENT_TYPE\";\n    /** Unsupported argument type (e.g. `{foo,foo}`) */\n    ErrorKind[ErrorKind[\"INVALID_ARGUMENT_TYPE\"] = 5] = \"INVALID_ARGUMENT_TYPE\";\n    /** Expect an argument style (e.g. `{foo, number, }`) */\n    ErrorKind[ErrorKind[\"EXPECT_ARGUMENT_STYLE\"] = 6] = \"EXPECT_ARGUMENT_STYLE\";\n    /** The number skeleton is invalid. */\n    ErrorKind[ErrorKind[\"INVALID_NUMBER_SKELETON\"] = 7] = \"INVALID_NUMBER_SKELETON\";\n    /** The date time skeleton is invalid. */\n    ErrorKind[ErrorKind[\"INVALID_DATE_TIME_SKELETON\"] = 8] = \"INVALID_DATE_TIME_SKELETON\";\n    /** Exepct a number skeleton following the `::` (e.g. `{foo, number, ::}`) */\n    ErrorKind[ErrorKind[\"EXPECT_NUMBER_SKELETON\"] = 9] = \"EXPECT_NUMBER_SKELETON\";\n    /** Exepct a date time skeleton following the `::` (e.g. `{foo, date, ::}`) */\n    ErrorKind[ErrorKind[\"EXPECT_DATE_TIME_SKELETON\"] = 10] = \"EXPECT_DATE_TIME_SKELETON\";\n    /** Unmatched apostrophes in the argument style (e.g. `{foo, number, 'test`) */\n    ErrorKind[ErrorKind[\"UNCLOSED_QUOTE_IN_ARGUMENT_STYLE\"] = 11] = \"UNCLOSED_QUOTE_IN_ARGUMENT_STYLE\";\n    /** Missing select argument options (e.g. `{foo, select}`) */\n    ErrorKind[ErrorKind[\"EXPECT_SELECT_ARGUMENT_OPTIONS\"] = 12] = \"EXPECT_SELECT_ARGUMENT_OPTIONS\";\n    /** Expecting an offset value in `plural` or `selectordinal` argument (e.g `{foo, plural, offset}`) */\n    ErrorKind[ErrorKind[\"EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE\"] = 13] = \"EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE\";\n    /** Offset value in `plural` or `selectordinal` is invalid (e.g. `{foo, plural, offset: x}`) */\n    ErrorKind[ErrorKind[\"INVALID_PLURAL_ARGUMENT_OFFSET_VALUE\"] = 14] = \"INVALID_PLURAL_ARGUMENT_OFFSET_VALUE\";\n    /** Expecting a selector in `select` argument (e.g `{foo, select}`) */\n    ErrorKind[ErrorKind[\"EXPECT_SELECT_ARGUMENT_SELECTOR\"] = 15] = \"EXPECT_SELECT_ARGUMENT_SELECTOR\";\n    /** Expecting a selector in `plural` or `selectordinal` argument (e.g `{foo, plural}`) */\n    ErrorKind[ErrorKind[\"EXPECT_PLURAL_ARGUMENT_SELECTOR\"] = 16] = \"EXPECT_PLURAL_ARGUMENT_SELECTOR\";\n    /** Expecting a message fragment after the `select` selector (e.g. `{foo, select, apple}`) */\n    ErrorKind[ErrorKind[\"EXPECT_SELECT_ARGUMENT_SELECTOR_FRAGMENT\"] = 17] = \"EXPECT_SELECT_ARGUMENT_SELECTOR_FRAGMENT\";\n    /**\n     * Expecting a message fragment after the `plural` or `selectordinal` selector\n     * (e.g. `{foo, plural, one}`)\n     */\n    ErrorKind[ErrorKind[\"EXPECT_PLURAL_ARGUMENT_SELECTOR_FRAGMENT\"] = 18] = \"EXPECT_PLURAL_ARGUMENT_SELECTOR_FRAGMENT\";\n    /** Selector in `plural` or `selectordinal` is malformed (e.g. `{foo, plural, =x {#}}`) */\n    ErrorKind[ErrorKind[\"INVALID_PLURAL_ARGUMENT_SELECTOR\"] = 19] = \"INVALID_PLURAL_ARGUMENT_SELECTOR\";\n    /**\n     * Duplicate selectors in `plural` or `selectordinal` argument.\n     * (e.g. {foo, plural, one {#} one {#}})\n     */\n    ErrorKind[ErrorKind[\"DUPLICATE_PLURAL_ARGUMENT_SELECTOR\"] = 20] = \"DUPLICATE_PLURAL_ARGUMENT_SELECTOR\";\n    /** Duplicate selectors in `select` argument.\n     * (e.g. {foo, select, apple {apple} apple {apple}})\n     */\n    ErrorKind[ErrorKind[\"DUPLICATE_SELECT_ARGUMENT_SELECTOR\"] = 21] = \"DUPLICATE_SELECT_ARGUMENT_SELECTOR\";\n    /** Plural or select argument option must have `other` clause. */\n    ErrorKind[ErrorKind[\"MISSING_OTHER_CLAUSE\"] = 22] = \"MISSING_OTHER_CLAUSE\";\n    /** The tag is malformed. (e.g. `<bold!>foo</bold!>) */\n    ErrorKind[ErrorKind[\"INVALID_TAG\"] = 23] = \"INVALID_TAG\";\n    /** The tag name is invalid. (e.g. `<123>foo</123>`) */\n    ErrorKind[ErrorKind[\"INVALID_TAG_NAME\"] = 25] = \"INVALID_TAG_NAME\";\n    /** The closing tag does not match the opening tag. (e.g. `<bold>foo</italic>`) */\n    ErrorKind[ErrorKind[\"UNMATCHED_CLOSING_TAG\"] = 26] = \"UNMATCHED_CLOSING_TAG\";\n    /** The opening tag has unmatched closing tag. (e.g. `<bold>foo`) */\n    ErrorKind[ErrorKind[\"UNCLOSED_TAG\"] = 27] = \"UNCLOSED_TAG\";\n})(ErrorKind = exports.ErrorKind || (exports.ErrorKind = {}));\n"},"lineCount":67}},"error":null,"hash":"09d6b9ca7b746800b7a5c3f55357b593","cacheData":{"env":{}}}