{"id":"node_modules/@formatjs/icu-messageformat-parser/parser.js","dependencies":[{"name":"E:\\Proyects\\ReactJS\\threetwicesix\\package.json","includedInParent":true,"mtime":1619894965266},{"name":"E:\\Proyects\\ReactJS\\threetwicesix\\node_modules\\@formatjs\\icu-messageformat-parser\\package.json","includedInParent":true,"mtime":1619287476881},{"name":"tslib","loc":{"line":5,"column":22},"parent":"E:\\Proyects\\ReactJS\\threetwicesix\\node_modules\\@formatjs\\icu-messageformat-parser\\parser.js","resolved":"E:\\Proyects\\ReactJS\\threetwicesix\\node_modules\\tslib\\tslib.es6.js"},{"name":"./error","loc":{"line":6,"column":22},"parent":"E:\\Proyects\\ReactJS\\threetwicesix\\node_modules\\@formatjs\\icu-messageformat-parser\\parser.js","resolved":"E:\\Proyects\\ReactJS\\threetwicesix\\node_modules\\@formatjs\\icu-messageformat-parser\\error.js"},{"name":"./types","loc":{"line":7,"column":22},"parent":"E:\\Proyects\\ReactJS\\threetwicesix\\node_modules\\@formatjs\\icu-messageformat-parser\\parser.js","resolved":"E:\\Proyects\\ReactJS\\threetwicesix\\node_modules\\@formatjs\\icu-messageformat-parser\\types.js"},{"name":"./regex.generated","loc":{"line":8,"column":32},"parent":"E:\\Proyects\\ReactJS\\threetwicesix\\node_modules\\@formatjs\\icu-messageformat-parser\\parser.js","resolved":"E:\\Proyects\\ReactJS\\threetwicesix\\node_modules\\@formatjs\\icu-messageformat-parser\\regex.generated.js"},{"name":"@formatjs/icu-skeleton-parser","loc":{"line":9,"column":36},"parent":"E:\\Proyects\\ReactJS\\threetwicesix\\node_modules\\@formatjs\\icu-messageformat-parser\\parser.js","resolved":"E:\\Proyects\\ReactJS\\threetwicesix\\node_modules\\@formatjs\\icu-skeleton-parser\\index.js"}],"generated":{"js":"\"use strict\";\nvar _a;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Parser = void 0;\nvar tslib_1 = require(\"tslib\");\nvar error_1 = require(\"./error\");\nvar types_1 = require(\"./types\");\nvar regex_generated_1 = require(\"./regex.generated\");\nvar icu_skeleton_parser_1 = require(\"@formatjs/icu-skeleton-parser\");\nfunction createLocation(start, end) {\n    return { start: start, end: end };\n}\n// #region Ponyfills\n// Consolidate these variables up top for easier toggling during debugging\nvar hasNativeStartsWith = !!String.prototype.startsWith;\nvar hasNativeFromCodePoint = !!String.fromCodePoint;\nvar hasNativeFromEntries = !!Object.fromEntries;\nvar hasNativeCodePointAt = !!String.prototype.codePointAt;\nvar hasTrimStart = !!String.prototype.trimStart;\nvar hasTrimEnd = !!String.prototype.trimEnd;\nvar hasNativeIsSafeInteger = !!Number.isSafeInteger;\nvar isSafeInteger = hasNativeIsSafeInteger\n    ? Number.isSafeInteger\n    : function (n) {\n        return (typeof n === 'number' &&\n            isFinite(n) &&\n            Math.floor(n) === n &&\n            Math.abs(n) <= 0x1fffffffffffff);\n    };\n// IE11 does not support y and u.\nvar REGEX_SUPPORTS_U_AND_Y = true;\ntry {\n    var re = RE('([^\\\\p{White_Space}\\\\p{Pattern_Syntax}]*)', 'yu');\n    /**\n     * legacy Edge or Xbox One browser\n     * Unicode flag support: supported\n     * Pattern_Syntax support: not supported\n     * See https://github.com/formatjs/formatjs/issues/2822\n     */\n    REGEX_SUPPORTS_U_AND_Y = ((_a = re.exec('a')) === null || _a === void 0 ? void 0 : _a[0]) === 'a';\n}\ncatch (_) {\n    REGEX_SUPPORTS_U_AND_Y = false;\n}\nvar startsWith = hasNativeStartsWith\n    ? // Native\n        function startsWith(s, search, position) {\n            return s.startsWith(search, position);\n        }\n    : // For IE11\n        function startsWith(s, search, position) {\n            return s.slice(position, position + search.length) === search;\n        };\nvar fromCodePoint = hasNativeFromCodePoint\n    ? String.fromCodePoint\n    : // IE11\n        function fromCodePoint() {\n            var codePoints = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                codePoints[_i] = arguments[_i];\n            }\n            var elements = '';\n            var length = codePoints.length;\n            var i = 0;\n            var code;\n            while (length > i) {\n                code = codePoints[i++];\n                if (code > 0x10ffff)\n                    throw RangeError(code + ' is not a valid code point');\n                elements +=\n                    code < 0x10000\n                        ? String.fromCharCode(code)\n                        : String.fromCharCode(((code -= 0x10000) >> 10) + 0xd800, (code % 0x400) + 0xdc00);\n            }\n            return elements;\n        };\nvar fromEntries = \n// native\nhasNativeFromEntries\n    ? Object.fromEntries\n    : // Ponyfill\n        function fromEntries(entries) {\n            var obj = {};\n            for (var _i = 0, entries_1 = entries; _i < entries_1.length; _i++) {\n                var _a = entries_1[_i], k = _a[0], v = _a[1];\n                obj[k] = v;\n            }\n            return obj;\n        };\nvar codePointAt = hasNativeCodePointAt\n    ? // Native\n        function codePointAt(s, index) {\n            return s.codePointAt(index);\n        }\n    : // IE 11\n        function codePointAt(s, index) {\n            var size = s.length;\n            if (index < 0 || index >= size) {\n                return undefined;\n            }\n            var first = s.charCodeAt(index);\n            var second;\n            return first < 0xd800 ||\n                first > 0xdbff ||\n                index + 1 === size ||\n                (second = s.charCodeAt(index + 1)) < 0xdc00 ||\n                second > 0xdfff\n                ? first\n                : ((first - 0xd800) << 10) + (second - 0xdc00) + 0x10000;\n        };\nvar trimStart = hasTrimStart\n    ? // Native\n        function trimStart(s) {\n            return s.trimStart();\n        }\n    : // Ponyfill\n        function trimStart(s) {\n            return s.replace(regex_generated_1.SPACE_SEPARATOR_START_REGEX, '');\n        };\nvar trimEnd = hasTrimEnd\n    ? // Native\n        function trimEnd(s) {\n            return s.trimEnd();\n        }\n    : // Ponyfill\n        function trimEnd(s) {\n            return s.replace(regex_generated_1.SPACE_SEPARATOR_END_REGEX, '');\n        };\n// Prevent minifier to translate new RegExp to literal form that might cause syntax error on IE11.\nfunction RE(s, flag) {\n    return new RegExp(s, flag);\n}\n// #endregion\nvar matchIdentifierAtIndex;\nif (REGEX_SUPPORTS_U_AND_Y) {\n    // Native\n    var IDENTIFIER_PREFIX_RE_1 = RE('([^\\\\p{White_Space}\\\\p{Pattern_Syntax}]*)', 'yu');\n    matchIdentifierAtIndex = function matchIdentifierAtIndex(s, index) {\n        var _a;\n        IDENTIFIER_PREFIX_RE_1.lastIndex = index;\n        var match = IDENTIFIER_PREFIX_RE_1.exec(s);\n        return (_a = match[1]) !== null && _a !== void 0 ? _a : '';\n    };\n}\nelse {\n    // IE11\n    matchIdentifierAtIndex = function matchIdentifierAtIndex(s, index) {\n        var match = [];\n        while (true) {\n            var c = codePointAt(s, index);\n            if (c === undefined || _isWhiteSpace(c) || _isPatternSyntax(c)) {\n                break;\n            }\n            match.push(c);\n            index += c >= 0x10000 ? 2 : 1;\n        }\n        return fromCodePoint.apply(void 0, match);\n    };\n}\nvar Parser = /** @class */ (function () {\n    function Parser(message, options) {\n        if (options === void 0) { options = {}; }\n        this.message = message;\n        this.position = { offset: 0, line: 1, column: 1 };\n        this.ignoreTag = !!options.ignoreTag;\n        this.requiresOtherClause = !!options.requiresOtherClause;\n        this.shouldParseSkeletons = !!options.shouldParseSkeletons;\n    }\n    Parser.prototype.parse = function () {\n        if (this.offset() !== 0) {\n            throw Error('parser can only be used once');\n        }\n        return this.parseMessage(0, '', false);\n    };\n    Parser.prototype.parseMessage = function (nestingLevel, parentArgType, expectingCloseTag) {\n        var elements = [];\n        while (!this.isEOF()) {\n            var char = this.char();\n            if (char === 123 /* `{` */) {\n                var result = this.parseArgument(nestingLevel, expectingCloseTag);\n                if (result.err) {\n                    return result;\n                }\n                elements.push(result.val);\n            }\n            else if (char === 125 /* `}` */ && nestingLevel > 0) {\n                break;\n            }\n            else if (char === 35 /* `#` */ &&\n                (parentArgType === 'plural' || parentArgType === 'selectordinal')) {\n                var position = this.clonePosition();\n                this.bump();\n                elements.push({\n                    type: types_1.TYPE.pound,\n                    location: createLocation(position, this.clonePosition()),\n                });\n            }\n            else if (char === 60 /* `<` */ &&\n                !this.ignoreTag &&\n                this.peek() === 47 // char code for '/'\n            ) {\n                if (expectingCloseTag) {\n                    break;\n                }\n                else {\n                    return this.error(error_1.ErrorKind.UNMATCHED_CLOSING_TAG, createLocation(this.clonePosition(), this.clonePosition()));\n                }\n            }\n            else if (char === 60 /* `<` */ &&\n                !this.ignoreTag &&\n                _isAlpha(this.peek() || 0)) {\n                var result = this.parseTag(nestingLevel, parentArgType);\n                if (result.err) {\n                    return result;\n                }\n                elements.push(result.val);\n            }\n            else {\n                var result = this.parseLiteral(nestingLevel, parentArgType);\n                if (result.err) {\n                    return result;\n                }\n                elements.push(result.val);\n            }\n        }\n        return { val: elements, err: null };\n    };\n    /**\n     * A tag name must start with an ASCII lower/upper case letter. The grammar is based on the\n     * [custom element name][] except that a dash is NOT always mandatory and uppercase letters\n     * are accepted:\n     *\n     * ```\n     * tag ::= \"<\" tagName (whitespace)* \"/>\" | \"<\" tagName (whitespace)* \">\" message \"</\" tagName (whitespace)* \">\"\n     * tagName ::= [a-z] (PENChar)*\n     * PENChar ::=\n     *     \"-\" | \".\" | [0-9] | \"_\" | [a-z] | [A-Z] | #xB7 | [#xC0-#xD6] | [#xD8-#xF6] | [#xF8-#x37D] |\n     *     [#x37F-#x1FFF] | [#x200C-#x200D] | [#x203F-#x2040] | [#x2070-#x218F] | [#x2C00-#x2FEF] |\n     *     [#x3001-#xD7FF] | [#xF900-#xFDCF] | [#xFDF0-#xFFFD] | [#x10000-#xEFFFF]\n     * ```\n     *\n     * [custom element name]: https://html.spec.whatwg.org/multipage/custom-elements.html#valid-custom-element-name\n     * NOTE: We're a bit more lax here since HTML technically does not allow uppercase HTML element but we do\n     * since other tag-based engines like React allow it\n     */\n    Parser.prototype.parseTag = function (nestingLevel, parentArgType) {\n        var startPosition = this.clonePosition();\n        this.bump(); // `<`\n        var tagName = this.parseTagName();\n        this.bumpSpace();\n        if (this.bumpIf('/>')) {\n            // Self closing tag\n            return {\n                val: {\n                    type: types_1.TYPE.literal,\n                    value: \"<\" + tagName + \"/>\",\n                    location: createLocation(startPosition, this.clonePosition()),\n                },\n                err: null,\n            };\n        }\n        else if (this.bumpIf('>')) {\n            var childrenResult = this.parseMessage(nestingLevel + 1, parentArgType, true);\n            if (childrenResult.err) {\n                return childrenResult;\n            }\n            var children = childrenResult.val;\n            // Expecting a close tag\n            var endTagStartPosition = this.clonePosition();\n            if (this.bumpIf('</')) {\n                if (this.isEOF() || !_isAlpha(this.char())) {\n                    return this.error(error_1.ErrorKind.INVALID_TAG, createLocation(endTagStartPosition, this.clonePosition()));\n                }\n                var closingTagNameStartPosition = this.clonePosition();\n                var closingTagName = this.parseTagName();\n                if (tagName !== closingTagName) {\n                    return this.error(error_1.ErrorKind.UNMATCHED_CLOSING_TAG, createLocation(closingTagNameStartPosition, this.clonePosition()));\n                }\n                this.bumpSpace();\n                if (!this.bumpIf('>')) {\n                    return this.error(error_1.ErrorKind.INVALID_TAG, createLocation(endTagStartPosition, this.clonePosition()));\n                }\n                return {\n                    val: {\n                        type: types_1.TYPE.tag,\n                        value: tagName,\n                        children: children,\n                        location: createLocation(startPosition, this.clonePosition()),\n                    },\n                    err: null,\n                };\n            }\n            else {\n                return this.error(error_1.ErrorKind.UNCLOSED_TAG, createLocation(startPosition, this.clonePosition()));\n            }\n        }\n        else {\n            return this.error(error_1.ErrorKind.INVALID_TAG, createLocation(startPosition, this.clonePosition()));\n        }\n    };\n    /**\n     * This method assumes that the caller has peeked ahead for the first tag character.\n     */\n    Parser.prototype.parseTagName = function () {\n        var startOffset = this.offset();\n        this.bump(); // the first tag name character\n        while (!this.isEOF() && _isPotentialElementNameChar(this.char())) {\n            this.bump();\n        }\n        return this.message.slice(startOffset, this.offset());\n    };\n    Parser.prototype.parseLiteral = function (nestingLevel, parentArgType) {\n        var start = this.clonePosition();\n        var value = '';\n        while (true) {\n            var parseQuoteResult = this.tryParseQuote(parentArgType);\n            if (parseQuoteResult) {\n                value += parseQuoteResult;\n                continue;\n            }\n            var parseUnquotedResult = this.tryParseUnquoted(nestingLevel, parentArgType);\n            if (parseUnquotedResult) {\n                value += parseUnquotedResult;\n                continue;\n            }\n            var parseLeftAngleResult = this.tryParseLeftAngleBracket();\n            if (parseLeftAngleResult) {\n                value += parseLeftAngleResult;\n                continue;\n            }\n            break;\n        }\n        var location = createLocation(start, this.clonePosition());\n        return {\n            val: { type: types_1.TYPE.literal, value: value, location: location },\n            err: null,\n        };\n    };\n    Parser.prototype.tryParseLeftAngleBracket = function () {\n        if (!this.isEOF() &&\n            this.char() === 60 /* `<` */ &&\n            (this.ignoreTag ||\n                // If at the opening tag or closing tag position, bail.\n                !_isAlphaOrSlash(this.peek() || 0))) {\n            this.bump(); // `<`\n            return '<';\n        }\n        return null;\n    };\n    /**\n     * Starting with ICU 4.8, an ASCII apostrophe only starts quoted text if it immediately precedes\n     * a character that requires quoting (that is, \"only where needed\"), and works the same in\n     * nested messages as on the top level of the pattern. The new behavior is otherwise compatible.\n     */\n    Parser.prototype.tryParseQuote = function (parentArgType) {\n        if (this.isEOF() || this.char() !== 39 /* `'` */) {\n            return null;\n        }\n        // Parse escaped char following the apostrophe, or early return if there is no escaped char.\n        // Check if is valid escaped character\n        switch (this.peek()) {\n            case 39 /* `'` */:\n                // double quote, should return as a single quote.\n                this.bump();\n                this.bump();\n                return \"'\";\n            // '{', '<', '>', '}'\n            case 123:\n            case 60:\n            case 62:\n            case 125:\n                break;\n            case 35: // '#'\n                if (parentArgType === 'plural' || parentArgType === 'selectordinal') {\n                    break;\n                }\n                return null;\n            default:\n                return null;\n        }\n        this.bump(); // apostrophe\n        var codePoints = [this.char()]; // escaped char\n        this.bump();\n        // read chars until the optional closing apostrophe is found\n        while (!this.isEOF()) {\n            var ch = this.char();\n            if (ch === 39 /* `'` */) {\n                if (this.peek() === 39 /* `'` */) {\n                    codePoints.push(39);\n                    // Bump one more time because we need to skip 2 characters.\n                    this.bump();\n                }\n                else {\n                    // Optional closing apostrophe.\n                    this.bump();\n                    break;\n                }\n            }\n            else {\n                codePoints.push(ch);\n            }\n            this.bump();\n        }\n        return fromCodePoint.apply(void 0, codePoints);\n    };\n    Parser.prototype.tryParseUnquoted = function (nestingLevel, parentArgType) {\n        if (this.isEOF()) {\n            return null;\n        }\n        var ch = this.char();\n        if (ch === 60 /* `<` */ ||\n            ch === 123 /* `{` */ ||\n            (ch === 35 /* `#` */ &&\n                (parentArgType === 'plural' || parentArgType === 'selectordinal')) ||\n            (ch === 125 /* `}` */ && nestingLevel > 0)) {\n            return null;\n        }\n        else {\n            this.bump();\n            return fromCodePoint(ch);\n        }\n    };\n    Parser.prototype.parseArgument = function (nestingLevel, expectingCloseTag) {\n        var openingBracePosition = this.clonePosition();\n        this.bump(); // `{`\n        this.bumpSpace();\n        if (this.isEOF()) {\n            return this.error(error_1.ErrorKind.EXPECT_ARGUMENT_CLOSING_BRACE, createLocation(openingBracePosition, this.clonePosition()));\n        }\n        if (this.char() === 125 /* `}` */) {\n            this.bump();\n            return this.error(error_1.ErrorKind.EMPTY_ARGUMENT, createLocation(openingBracePosition, this.clonePosition()));\n        }\n        // argument name\n        var value = this.parseIdentifierIfPossible().value;\n        if (!value) {\n            return this.error(error_1.ErrorKind.MALFORMED_ARGUMENT, createLocation(openingBracePosition, this.clonePosition()));\n        }\n        this.bumpSpace();\n        if (this.isEOF()) {\n            return this.error(error_1.ErrorKind.EXPECT_ARGUMENT_CLOSING_BRACE, createLocation(openingBracePosition, this.clonePosition()));\n        }\n        switch (this.char()) {\n            // Simple argument: `{name}`\n            case 125 /* `}` */: {\n                this.bump(); // `}`\n                return {\n                    val: {\n                        type: types_1.TYPE.argument,\n                        // value does not include the opening and closing braces.\n                        value: value,\n                        location: createLocation(openingBracePosition, this.clonePosition()),\n                    },\n                    err: null,\n                };\n            }\n            // Argument with options: `{name, format, ...}`\n            case 44 /* `,` */: {\n                this.bump(); // `,`\n                this.bumpSpace();\n                if (this.isEOF()) {\n                    return this.error(error_1.ErrorKind.EXPECT_ARGUMENT_CLOSING_BRACE, createLocation(openingBracePosition, this.clonePosition()));\n                }\n                return this.parseArgumentOptions(nestingLevel, expectingCloseTag, value, openingBracePosition);\n            }\n            default:\n                return this.error(error_1.ErrorKind.MALFORMED_ARGUMENT, createLocation(openingBracePosition, this.clonePosition()));\n        }\n    };\n    /**\n     * Advance the parser until the end of the identifier, if it is currently on\n     * an identifier character. Return an empty string otherwise.\n     */\n    Parser.prototype.parseIdentifierIfPossible = function () {\n        var startingPosition = this.clonePosition();\n        var startOffset = this.offset();\n        var value = matchIdentifierAtIndex(this.message, startOffset);\n        var endOffset = startOffset + value.length;\n        this.bumpTo(endOffset);\n        var endPosition = this.clonePosition();\n        var location = createLocation(startingPosition, endPosition);\n        return { value: value, location: location };\n    };\n    Parser.prototype.parseArgumentOptions = function (nestingLevel, expectingCloseTag, value, openingBracePosition) {\n        var _a;\n        // Parse this range:\n        // {name, type, style}\n        //        ^---^\n        var typeStartPosition = this.clonePosition();\n        var argType = this.parseIdentifierIfPossible().value;\n        var typeEndPosition = this.clonePosition();\n        switch (argType) {\n            case '':\n                // Expecting a style string number, date, time, plural, selectordinal, or select.\n                return this.error(error_1.ErrorKind.EXPECT_ARGUMENT_TYPE, createLocation(typeStartPosition, typeEndPosition));\n            case 'number':\n            case 'date':\n            case 'time': {\n                // Parse this range:\n                // {name, number, style}\n                //              ^-------^\n                this.bumpSpace();\n                var styleAndLocation = null;\n                if (this.bumpIf(',')) {\n                    this.bumpSpace();\n                    var styleStartPosition = this.clonePosition();\n                    var result = this.parseSimpleArgStyleIfPossible();\n                    if (result.err) {\n                        return result;\n                    }\n                    var style = trimEnd(result.val);\n                    if (style.length === 0) {\n                        return this.error(error_1.ErrorKind.EXPECT_ARGUMENT_STYLE, createLocation(this.clonePosition(), this.clonePosition()));\n                    }\n                    var styleLocation = createLocation(styleStartPosition, this.clonePosition());\n                    styleAndLocation = { style: style, styleLocation: styleLocation };\n                }\n                var argCloseResult = this.tryParseArgumentClose(openingBracePosition);\n                if (argCloseResult.err) {\n                    return argCloseResult;\n                }\n                var location_1 = createLocation(openingBracePosition, this.clonePosition());\n                // Extract style or skeleton\n                if (styleAndLocation && startsWith(styleAndLocation === null || styleAndLocation === void 0 ? void 0 : styleAndLocation.style, '::', 0)) {\n                    // Skeleton starts with `::`.\n                    var skeleton = trimStart(styleAndLocation.style.slice(2));\n                    if (argType === 'number') {\n                        var result = this.parseNumberSkeletonFromString(skeleton, styleAndLocation.styleLocation);\n                        if (result.err) {\n                            return result;\n                        }\n                        return {\n                            val: { type: types_1.TYPE.number, value: value, location: location_1, style: result.val },\n                            err: null,\n                        };\n                    }\n                    else {\n                        if (skeleton.length === 0) {\n                            return this.error(error_1.ErrorKind.EXPECT_DATE_TIME_SKELETON, location_1);\n                        }\n                        var style = {\n                            type: types_1.SKELETON_TYPE.dateTime,\n                            pattern: skeleton,\n                            location: styleAndLocation.styleLocation,\n                            parsedOptions: this.shouldParseSkeletons\n                                ? icu_skeleton_parser_1.parseDateTimeSkeleton(skeleton)\n                                : {},\n                        };\n                        var type = argType === 'date' ? types_1.TYPE.date : types_1.TYPE.time;\n                        return {\n                            val: { type: type, value: value, location: location_1, style: style },\n                            err: null,\n                        };\n                    }\n                }\n                // Regular style or no style.\n                return {\n                    val: {\n                        type: argType === 'number'\n                            ? types_1.TYPE.number\n                            : argType === 'date'\n                                ? types_1.TYPE.date\n                                : types_1.TYPE.time,\n                        value: value,\n                        location: location_1,\n                        style: (_a = styleAndLocation === null || styleAndLocation === void 0 ? void 0 : styleAndLocation.style) !== null && _a !== void 0 ? _a : null,\n                    },\n                    err: null,\n                };\n            }\n            case 'plural':\n            case 'selectordinal':\n            case 'select': {\n                // Parse this range:\n                // {name, plural, options}\n                //              ^---------^\n                var typeEndPosition_1 = this.clonePosition();\n                this.bumpSpace();\n                if (!this.bumpIf(',')) {\n                    return this.error(error_1.ErrorKind.EXPECT_SELECT_ARGUMENT_OPTIONS, createLocation(typeEndPosition_1, tslib_1.__assign({}, typeEndPosition_1)));\n                }\n                this.bumpSpace();\n                // Parse offset:\n                // {name, plural, offset:1, options}\n                //                ^-----^\n                //\n                // or the first option:\n                //\n                // {name, plural, one {...} other {...}}\n                //                ^--^\n                var identifierAndLocation = this.parseIdentifierIfPossible();\n                var pluralOffset = 0;\n                if (argType !== 'select' && identifierAndLocation.value === 'offset') {\n                    if (!this.bumpIf(':')) {\n                        return this.error(error_1.ErrorKind.EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE, createLocation(this.clonePosition(), this.clonePosition()));\n                    }\n                    this.bumpSpace();\n                    var result = this.tryParseDecimalInteger(error_1.ErrorKind.EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE, error_1.ErrorKind.INVALID_PLURAL_ARGUMENT_OFFSET_VALUE);\n                    if (result.err) {\n                        return result;\n                    }\n                    // Parse another identifier for option parsing\n                    this.bumpSpace();\n                    identifierAndLocation = this.parseIdentifierIfPossible();\n                    pluralOffset = result.val;\n                }\n                var optionsResult = this.tryParsePluralOrSelectOptions(nestingLevel, argType, expectingCloseTag, identifierAndLocation);\n                if (optionsResult.err) {\n                    return optionsResult;\n                }\n                var argCloseResult = this.tryParseArgumentClose(openingBracePosition);\n                if (argCloseResult.err) {\n                    return argCloseResult;\n                }\n                var location_2 = createLocation(openingBracePosition, this.clonePosition());\n                if (argType === 'select') {\n                    return {\n                        val: {\n                            type: types_1.TYPE.select,\n                            value: value,\n                            options: fromEntries(optionsResult.val),\n                            location: location_2,\n                        },\n                        err: null,\n                    };\n                }\n                else {\n                    return {\n                        val: {\n                            type: types_1.TYPE.plural,\n                            value: value,\n                            options: fromEntries(optionsResult.val),\n                            offset: pluralOffset,\n                            pluralType: argType === 'plural' ? 'cardinal' : 'ordinal',\n                            location: location_2,\n                        },\n                        err: null,\n                    };\n                }\n            }\n            default:\n                return this.error(error_1.ErrorKind.INVALID_ARGUMENT_TYPE, createLocation(typeStartPosition, typeEndPosition));\n        }\n    };\n    Parser.prototype.tryParseArgumentClose = function (openingBracePosition) {\n        // Parse: {value, number, ::currency/GBP }\n        //\n        if (this.isEOF() || this.char() !== 125 /* `}` */) {\n            return this.error(error_1.ErrorKind.EXPECT_ARGUMENT_CLOSING_BRACE, createLocation(openingBracePosition, this.clonePosition()));\n        }\n        this.bump(); // `}`\n        return { val: true, err: null };\n    };\n    /**\n     * See: https://github.com/unicode-org/icu/blob/af7ed1f6d2298013dc303628438ec4abe1f16479/icu4c/source/common/messagepattern.cpp#L659\n     */\n    Parser.prototype.parseSimpleArgStyleIfPossible = function () {\n        var nestedBraces = 0;\n        var startPosition = this.clonePosition();\n        while (!this.isEOF()) {\n            var ch = this.char();\n            switch (ch) {\n                case 39 /* `'` */: {\n                    // Treat apostrophe as quoting but include it in the style part.\n                    // Find the end of the quoted literal text.\n                    this.bump();\n                    var apostrophePosition = this.clonePosition();\n                    if (!this.bumpUntil(\"'\")) {\n                        return this.error(error_1.ErrorKind.UNCLOSED_QUOTE_IN_ARGUMENT_STYLE, createLocation(apostrophePosition, this.clonePosition()));\n                    }\n                    this.bump();\n                    break;\n                }\n                case 123 /* `{` */: {\n                    nestedBraces += 1;\n                    this.bump();\n                    break;\n                }\n                case 125 /* `}` */: {\n                    if (nestedBraces > 0) {\n                        nestedBraces -= 1;\n                    }\n                    else {\n                        return {\n                            val: this.message.slice(startPosition.offset, this.offset()),\n                            err: null,\n                        };\n                    }\n                    break;\n                }\n                default:\n                    this.bump();\n                    break;\n            }\n        }\n        return {\n            val: this.message.slice(startPosition.offset, this.offset()),\n            err: null,\n        };\n    };\n    Parser.prototype.parseNumberSkeletonFromString = function (skeleton, location) {\n        var tokens = [];\n        try {\n            tokens = icu_skeleton_parser_1.parseNumberSkeletonFromString(skeleton);\n        }\n        catch (e) {\n            return this.error(error_1.ErrorKind.INVALID_NUMBER_SKELETON, location);\n        }\n        return {\n            val: {\n                type: types_1.SKELETON_TYPE.number,\n                tokens: tokens,\n                location: location,\n                parsedOptions: this.shouldParseSkeletons\n                    ? icu_skeleton_parser_1.parseNumberSkeleton(tokens)\n                    : {},\n            },\n            err: null,\n        };\n    };\n    /**\n     * @param nesting_level The current nesting level of messages.\n     *     This can be positive when parsing message fragment in select or plural argument options.\n     * @param parent_arg_type The parent argument's type.\n     * @param parsed_first_identifier If provided, this is the first identifier-like selector of\n     *     the argument. It is a by-product of a previous parsing attempt.\n     * @param expecting_close_tag If true, this message is directly or indirectly nested inside\n     *     between a pair of opening and closing tags. The nested message will not parse beyond\n     *     the closing tag boundary.\n     */\n    Parser.prototype.tryParsePluralOrSelectOptions = function (nestingLevel, parentArgType, expectCloseTag, parsedFirstIdentifier) {\n        var _a;\n        var hasOtherClause = false;\n        var options = [];\n        var parsedSelectors = new Set();\n        var selector = parsedFirstIdentifier.value, selectorLocation = parsedFirstIdentifier.location;\n        // Parse:\n        // one {one apple}\n        // ^--^\n        while (true) {\n            if (selector.length === 0) {\n                var startPosition = this.clonePosition();\n                if (parentArgType !== 'select' && this.bumpIf('=')) {\n                    // Try parse `={number}` selector\n                    var result = this.tryParseDecimalInteger(error_1.ErrorKind.EXPECT_PLURAL_ARGUMENT_SELECTOR, error_1.ErrorKind.INVALID_PLURAL_ARGUMENT_SELECTOR);\n                    if (result.err) {\n                        return result;\n                    }\n                    selectorLocation = createLocation(startPosition, this.clonePosition());\n                    selector = this.message.slice(startPosition.offset, this.offset());\n                }\n                else {\n                    break;\n                }\n            }\n            // Duplicate selector clauses\n            if (parsedSelectors.has(selector)) {\n                return this.error(parentArgType === 'select'\n                    ? error_1.ErrorKind.DUPLICATE_SELECT_ARGUMENT_SELECTOR\n                    : error_1.ErrorKind.DUPLICATE_PLURAL_ARGUMENT_SELECTOR, selectorLocation);\n            }\n            if (selector === 'other') {\n                hasOtherClause = true;\n            }\n            // Parse:\n            // one {one apple}\n            //     ^----------^\n            this.bumpSpace();\n            var openingBracePosition = this.clonePosition();\n            if (!this.bumpIf('{')) {\n                return this.error(parentArgType === 'select'\n                    ? error_1.ErrorKind.EXPECT_SELECT_ARGUMENT_SELECTOR_FRAGMENT\n                    : error_1.ErrorKind.EXPECT_PLURAL_ARGUMENT_SELECTOR_FRAGMENT, createLocation(this.clonePosition(), this.clonePosition()));\n            }\n            var fragmentResult = this.parseMessage(nestingLevel + 1, parentArgType, expectCloseTag);\n            if (fragmentResult.err) {\n                return fragmentResult;\n            }\n            var argCloseResult = this.tryParseArgumentClose(openingBracePosition);\n            if (argCloseResult.err) {\n                return argCloseResult;\n            }\n            options.push([\n                selector,\n                {\n                    value: fragmentResult.val,\n                    location: createLocation(openingBracePosition, this.clonePosition()),\n                },\n            ]);\n            // Keep track of the existing selectors\n            parsedSelectors.add(selector);\n            // Prep next selector clause.\n            this.bumpSpace();\n            (_a = this.parseIdentifierIfPossible(), selector = _a.value, selectorLocation = _a.location);\n        }\n        if (options.length === 0) {\n            return this.error(parentArgType === 'select'\n                ? error_1.ErrorKind.EXPECT_SELECT_ARGUMENT_SELECTOR\n                : error_1.ErrorKind.EXPECT_PLURAL_ARGUMENT_SELECTOR, createLocation(this.clonePosition(), this.clonePosition()));\n        }\n        if (this.requiresOtherClause && !hasOtherClause) {\n            return this.error(error_1.ErrorKind.MISSING_OTHER_CLAUSE, createLocation(this.clonePosition(), this.clonePosition()));\n        }\n        return { val: options, err: null };\n    };\n    Parser.prototype.tryParseDecimalInteger = function (expectNumberError, invalidNumberError) {\n        var sign = 1;\n        var startingPosition = this.clonePosition();\n        if (this.bumpIf('+')) {\n        }\n        else if (this.bumpIf('-')) {\n            sign = -1;\n        }\n        var hasDigits = false;\n        var decimal = 0;\n        while (!this.isEOF()) {\n            var ch = this.char();\n            if (ch >= 48 /* `0` */ && ch <= 57 /* `9` */) {\n                hasDigits = true;\n                decimal = decimal * 10 + (ch - 48);\n                this.bump();\n            }\n            else {\n                break;\n            }\n        }\n        var location = createLocation(startingPosition, this.clonePosition());\n        if (!hasDigits) {\n            return this.error(expectNumberError, location);\n        }\n        decimal *= sign;\n        if (!isSafeInteger(decimal)) {\n            return this.error(invalidNumberError, location);\n        }\n        return { val: decimal, err: null };\n    };\n    Parser.prototype.offset = function () {\n        return this.position.offset;\n    };\n    Parser.prototype.isEOF = function () {\n        return this.offset() === this.message.length;\n    };\n    Parser.prototype.clonePosition = function () {\n        // This is much faster than `Object.assign` or spread.\n        return {\n            offset: this.position.offset,\n            line: this.position.line,\n            column: this.position.column,\n        };\n    };\n    /**\n     * Return the code point at the current position of the parser.\n     * Throws if the index is out of bound.\n     */\n    Parser.prototype.char = function () {\n        var offset = this.position.offset;\n        if (offset >= this.message.length) {\n            throw Error('out of bound');\n        }\n        var code = codePointAt(this.message, offset);\n        if (code === undefined) {\n            throw Error(\"Offset \" + offset + \" is at invalid UTF-16 code unit boundary\");\n        }\n        return code;\n    };\n    Parser.prototype.error = function (kind, location) {\n        return {\n            val: null,\n            err: {\n                kind: kind,\n                message: this.message,\n                location: location,\n            },\n        };\n    };\n    /** Bump the parser to the next UTF-16 code unit. */\n    Parser.prototype.bump = function () {\n        if (this.isEOF()) {\n            return;\n        }\n        var code = this.char();\n        if (code === 10 /* '\\n' */) {\n            this.position.line += 1;\n            this.position.column = 1;\n            this.position.offset += 1;\n        }\n        else {\n            this.position.column += 1;\n            // 0 ~ 0x10000 -> unicode BMP, otherwise skip the surrogate pair.\n            this.position.offset += code < 0x10000 ? 1 : 2;\n        }\n    };\n    /**\n     * If the substring starting at the current position of the parser has\n     * the given prefix, then bump the parser to the character immediately\n     * following the prefix and return true. Otherwise, don't bump the parser\n     * and return false.\n     */\n    Parser.prototype.bumpIf = function (prefix) {\n        if (startsWith(this.message, prefix, this.offset())) {\n            for (var i = 0; i < prefix.length; i++) {\n                this.bump();\n            }\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Bump the parser until the pattern character is found and return `true`.\n     * Otherwise bump to the end of the file and return `false`.\n     */\n    Parser.prototype.bumpUntil = function (pattern) {\n        var currentOffset = this.offset();\n        var index = this.message.indexOf(pattern, currentOffset);\n        if (index >= 0) {\n            this.bumpTo(index);\n            return true;\n        }\n        else {\n            this.bumpTo(this.message.length);\n            return false;\n        }\n    };\n    /**\n     * Bump the parser to the target offset.\n     * If target offset is beyond the end of the input, bump the parser to the end of the input.\n     */\n    Parser.prototype.bumpTo = function (targetOffset) {\n        if (this.offset() > targetOffset) {\n            throw Error(\"targetOffset \" + targetOffset + \" must be greater than or equal to the current offset \" + this.offset());\n        }\n        targetOffset = Math.min(targetOffset, this.message.length);\n        while (true) {\n            var offset = this.offset();\n            if (offset === targetOffset) {\n                break;\n            }\n            if (offset > targetOffset) {\n                throw Error(\"targetOffset \" + targetOffset + \" is at invalid UTF-16 code unit boundary\");\n            }\n            this.bump();\n            if (this.isEOF()) {\n                break;\n            }\n        }\n    };\n    /** advance the parser through all whitespace to the next non-whitespace code unit. */\n    Parser.prototype.bumpSpace = function () {\n        while (!this.isEOF() && _isWhiteSpace(this.char())) {\n            this.bump();\n        }\n    };\n    /**\n     * Peek at the *next* Unicode codepoint in the input without advancing the parser.\n     * If the input has been exhausted, then this returns null.\n     */\n    Parser.prototype.peek = function () {\n        if (this.isEOF()) {\n            return null;\n        }\n        var code = this.char();\n        var offset = this.offset();\n        var nextCode = this.message.charCodeAt(offset + (code >= 0x10000 ? 2 : 1));\n        return nextCode !== null && nextCode !== void 0 ? nextCode : null;\n    };\n    return Parser;\n}());\nexports.Parser = Parser;\n/**\n * This check if codepoint is alphabet (lower & uppercase)\n * @param codepoint\n * @returns\n */\nfunction _isAlpha(codepoint) {\n    return ((codepoint >= 97 && codepoint <= 122) ||\n        (codepoint >= 65 && codepoint <= 90));\n}\nfunction _isAlphaOrSlash(codepoint) {\n    return _isAlpha(codepoint) || codepoint === 47; /* '/' */\n}\n/** See `parseTag` function docs. */\nfunction _isPotentialElementNameChar(c) {\n    return (c === 45 /* '-' */ ||\n        c === 46 /* '.' */ ||\n        (c >= 48 && c <= 57) /* 0..9 */ ||\n        c === 95 /* '_' */ ||\n        (c >= 97 && c <= 122) /** a..z */ ||\n        (c >= 65 && c <= 90) /* A..Z */ ||\n        c == 0xb7 ||\n        (c >= 0xc0 && c <= 0xd6) ||\n        (c >= 0xd8 && c <= 0xf6) ||\n        (c >= 0xf8 && c <= 0x37d) ||\n        (c >= 0x37f && c <= 0x1fff) ||\n        (c >= 0x200c && c <= 0x200d) ||\n        (c >= 0x203f && c <= 0x2040) ||\n        (c >= 0x2070 && c <= 0x218f) ||\n        (c >= 0x2c00 && c <= 0x2fef) ||\n        (c >= 0x3001 && c <= 0xd7ff) ||\n        (c >= 0xf900 && c <= 0xfdcf) ||\n        (c >= 0xfdf0 && c <= 0xfffd) ||\n        (c >= 0x10000 && c <= 0xeffff));\n}\n/**\n * Code point equivalent of regex `\\p{White_Space}`.\n * From: https://www.unicode.org/Public/UCD/latest/ucd/PropList.txt\n */\nfunction _isWhiteSpace(c) {\n    return ((c >= 0x0009 && c <= 0x000d) ||\n        c === 0x0020 ||\n        c === 0x0085 ||\n        (c >= 0x200e && c <= 0x200f) ||\n        c === 0x2028 ||\n        c === 0x2029);\n}\n/**\n * Code point equivalent of regex `\\p{Pattern_Syntax}`.\n * See https://www.unicode.org/Public/UCD/latest/ucd/PropList.txt\n */\nfunction _isPatternSyntax(c) {\n    return ((c >= 0x0021 && c <= 0x0023) ||\n        c === 0x0024 ||\n        (c >= 0x0025 && c <= 0x0027) ||\n        c === 0x0028 ||\n        c === 0x0029 ||\n        c === 0x002a ||\n        c === 0x002b ||\n        c === 0x002c ||\n        c === 0x002d ||\n        (c >= 0x002e && c <= 0x002f) ||\n        (c >= 0x003a && c <= 0x003b) ||\n        (c >= 0x003c && c <= 0x003e) ||\n        (c >= 0x003f && c <= 0x0040) ||\n        c === 0x005b ||\n        c === 0x005c ||\n        c === 0x005d ||\n        c === 0x005e ||\n        c === 0x0060 ||\n        c === 0x007b ||\n        c === 0x007c ||\n        c === 0x007d ||\n        c === 0x007e ||\n        c === 0x00a1 ||\n        (c >= 0x00a2 && c <= 0x00a5) ||\n        c === 0x00a6 ||\n        c === 0x00a7 ||\n        c === 0x00a9 ||\n        c === 0x00ab ||\n        c === 0x00ac ||\n        c === 0x00ae ||\n        c === 0x00b0 ||\n        c === 0x00b1 ||\n        c === 0x00b6 ||\n        c === 0x00bb ||\n        c === 0x00bf ||\n        c === 0x00d7 ||\n        c === 0x00f7 ||\n        (c >= 0x2010 && c <= 0x2015) ||\n        (c >= 0x2016 && c <= 0x2017) ||\n        c === 0x2018 ||\n        c === 0x2019 ||\n        c === 0x201a ||\n        (c >= 0x201b && c <= 0x201c) ||\n        c === 0x201d ||\n        c === 0x201e ||\n        c === 0x201f ||\n        (c >= 0x2020 && c <= 0x2027) ||\n        (c >= 0x2030 && c <= 0x2038) ||\n        c === 0x2039 ||\n        c === 0x203a ||\n        (c >= 0x203b && c <= 0x203e) ||\n        (c >= 0x2041 && c <= 0x2043) ||\n        c === 0x2044 ||\n        c === 0x2045 ||\n        c === 0x2046 ||\n        (c >= 0x2047 && c <= 0x2051) ||\n        c === 0x2052 ||\n        c === 0x2053 ||\n        (c >= 0x2055 && c <= 0x205e) ||\n        (c >= 0x2190 && c <= 0x2194) ||\n        (c >= 0x2195 && c <= 0x2199) ||\n        (c >= 0x219a && c <= 0x219b) ||\n        (c >= 0x219c && c <= 0x219f) ||\n        c === 0x21a0 ||\n        (c >= 0x21a1 && c <= 0x21a2) ||\n        c === 0x21a3 ||\n        (c >= 0x21a4 && c <= 0x21a5) ||\n        c === 0x21a6 ||\n        (c >= 0x21a7 && c <= 0x21ad) ||\n        c === 0x21ae ||\n        (c >= 0x21af && c <= 0x21cd) ||\n        (c >= 0x21ce && c <= 0x21cf) ||\n        (c >= 0x21d0 && c <= 0x21d1) ||\n        c === 0x21d2 ||\n        c === 0x21d3 ||\n        c === 0x21d4 ||\n        (c >= 0x21d5 && c <= 0x21f3) ||\n        (c >= 0x21f4 && c <= 0x22ff) ||\n        (c >= 0x2300 && c <= 0x2307) ||\n        c === 0x2308 ||\n        c === 0x2309 ||\n        c === 0x230a ||\n        c === 0x230b ||\n        (c >= 0x230c && c <= 0x231f) ||\n        (c >= 0x2320 && c <= 0x2321) ||\n        (c >= 0x2322 && c <= 0x2328) ||\n        c === 0x2329 ||\n        c === 0x232a ||\n        (c >= 0x232b && c <= 0x237b) ||\n        c === 0x237c ||\n        (c >= 0x237d && c <= 0x239a) ||\n        (c >= 0x239b && c <= 0x23b3) ||\n        (c >= 0x23b4 && c <= 0x23db) ||\n        (c >= 0x23dc && c <= 0x23e1) ||\n        (c >= 0x23e2 && c <= 0x2426) ||\n        (c >= 0x2427 && c <= 0x243f) ||\n        (c >= 0x2440 && c <= 0x244a) ||\n        (c >= 0x244b && c <= 0x245f) ||\n        (c >= 0x2500 && c <= 0x25b6) ||\n        c === 0x25b7 ||\n        (c >= 0x25b8 && c <= 0x25c0) ||\n        c === 0x25c1 ||\n        (c >= 0x25c2 && c <= 0x25f7) ||\n        (c >= 0x25f8 && c <= 0x25ff) ||\n        (c >= 0x2600 && c <= 0x266e) ||\n        c === 0x266f ||\n        (c >= 0x2670 && c <= 0x2767) ||\n        c === 0x2768 ||\n        c === 0x2769 ||\n        c === 0x276a ||\n        c === 0x276b ||\n        c === 0x276c ||\n        c === 0x276d ||\n        c === 0x276e ||\n        c === 0x276f ||\n        c === 0x2770 ||\n        c === 0x2771 ||\n        c === 0x2772 ||\n        c === 0x2773 ||\n        c === 0x2774 ||\n        c === 0x2775 ||\n        (c >= 0x2794 && c <= 0x27bf) ||\n        (c >= 0x27c0 && c <= 0x27c4) ||\n        c === 0x27c5 ||\n        c === 0x27c6 ||\n        (c >= 0x27c7 && c <= 0x27e5) ||\n        c === 0x27e6 ||\n        c === 0x27e7 ||\n        c === 0x27e8 ||\n        c === 0x27e9 ||\n        c === 0x27ea ||\n        c === 0x27eb ||\n        c === 0x27ec ||\n        c === 0x27ed ||\n        c === 0x27ee ||\n        c === 0x27ef ||\n        (c >= 0x27f0 && c <= 0x27ff) ||\n        (c >= 0x2800 && c <= 0x28ff) ||\n        (c >= 0x2900 && c <= 0x2982) ||\n        c === 0x2983 ||\n        c === 0x2984 ||\n        c === 0x2985 ||\n        c === 0x2986 ||\n        c === 0x2987 ||\n        c === 0x2988 ||\n        c === 0x2989 ||\n        c === 0x298a ||\n        c === 0x298b ||\n        c === 0x298c ||\n        c === 0x298d ||\n        c === 0x298e ||\n        c === 0x298f ||\n        c === 0x2990 ||\n        c === 0x2991 ||\n        c === 0x2992 ||\n        c === 0x2993 ||\n        c === 0x2994 ||\n        c === 0x2995 ||\n        c === 0x2996 ||\n        c === 0x2997 ||\n        c === 0x2998 ||\n        (c >= 0x2999 && c <= 0x29d7) ||\n        c === 0x29d8 ||\n        c === 0x29d9 ||\n        c === 0x29da ||\n        c === 0x29db ||\n        (c >= 0x29dc && c <= 0x29fb) ||\n        c === 0x29fc ||\n        c === 0x29fd ||\n        (c >= 0x29fe && c <= 0x2aff) ||\n        (c >= 0x2b00 && c <= 0x2b2f) ||\n        (c >= 0x2b30 && c <= 0x2b44) ||\n        (c >= 0x2b45 && c <= 0x2b46) ||\n        (c >= 0x2b47 && c <= 0x2b4c) ||\n        (c >= 0x2b4d && c <= 0x2b73) ||\n        (c >= 0x2b74 && c <= 0x2b75) ||\n        (c >= 0x2b76 && c <= 0x2b95) ||\n        c === 0x2b96 ||\n        (c >= 0x2b97 && c <= 0x2bff) ||\n        (c >= 0x2e00 && c <= 0x2e01) ||\n        c === 0x2e02 ||\n        c === 0x2e03 ||\n        c === 0x2e04 ||\n        c === 0x2e05 ||\n        (c >= 0x2e06 && c <= 0x2e08) ||\n        c === 0x2e09 ||\n        c === 0x2e0a ||\n        c === 0x2e0b ||\n        c === 0x2e0c ||\n        c === 0x2e0d ||\n        (c >= 0x2e0e && c <= 0x2e16) ||\n        c === 0x2e17 ||\n        (c >= 0x2e18 && c <= 0x2e19) ||\n        c === 0x2e1a ||\n        c === 0x2e1b ||\n        c === 0x2e1c ||\n        c === 0x2e1d ||\n        (c >= 0x2e1e && c <= 0x2e1f) ||\n        c === 0x2e20 ||\n        c === 0x2e21 ||\n        c === 0x2e22 ||\n        c === 0x2e23 ||\n        c === 0x2e24 ||\n        c === 0x2e25 ||\n        c === 0x2e26 ||\n        c === 0x2e27 ||\n        c === 0x2e28 ||\n        c === 0x2e29 ||\n        (c >= 0x2e2a && c <= 0x2e2e) ||\n        c === 0x2e2f ||\n        (c >= 0x2e30 && c <= 0x2e39) ||\n        (c >= 0x2e3a && c <= 0x2e3b) ||\n        (c >= 0x2e3c && c <= 0x2e3f) ||\n        c === 0x2e40 ||\n        c === 0x2e41 ||\n        c === 0x2e42 ||\n        (c >= 0x2e43 && c <= 0x2e4f) ||\n        (c >= 0x2e50 && c <= 0x2e51) ||\n        c === 0x2e52 ||\n        (c >= 0x2e53 && c <= 0x2e7f) ||\n        (c >= 0x3001 && c <= 0x3003) ||\n        c === 0x3008 ||\n        c === 0x3009 ||\n        c === 0x300a ||\n        c === 0x300b ||\n        c === 0x300c ||\n        c === 0x300d ||\n        c === 0x300e ||\n        c === 0x300f ||\n        c === 0x3010 ||\n        c === 0x3011 ||\n        (c >= 0x3012 && c <= 0x3013) ||\n        c === 0x3014 ||\n        c === 0x3015 ||\n        c === 0x3016 ||\n        c === 0x3017 ||\n        c === 0x3018 ||\n        c === 0x3019 ||\n        c === 0x301a ||\n        c === 0x301b ||\n        c === 0x301c ||\n        c === 0x301d ||\n        (c >= 0x301e && c <= 0x301f) ||\n        c === 0x3020 ||\n        c === 0x3030 ||\n        c === 0xfd3e ||\n        c === 0xfd3f ||\n        (c >= 0xfe45 && c <= 0xfe46));\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":408,"column":0},"generated":{"line":408,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":409,"column":0},"generated":{"line":409,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":410,"column":0},"generated":{"line":410,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":411,"column":0},"generated":{"line":411,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":412,"column":0},"generated":{"line":412,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":413,"column":0},"generated":{"line":413,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":414,"column":0},"generated":{"line":414,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":415,"column":0},"generated":{"line":415,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":416,"column":0},"generated":{"line":416,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":417,"column":0},"generated":{"line":417,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":418,"column":0},"generated":{"line":418,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":419,"column":0},"generated":{"line":419,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":420,"column":0},"generated":{"line":420,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":421,"column":0},"generated":{"line":421,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":422,"column":0},"generated":{"line":422,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":423,"column":0},"generated":{"line":423,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":424,"column":0},"generated":{"line":424,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":425,"column":0},"generated":{"line":425,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":426,"column":0},"generated":{"line":426,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":427,"column":0},"generated":{"line":427,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":428,"column":0},"generated":{"line":428,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":429,"column":0},"generated":{"line":429,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":430,"column":0},"generated":{"line":430,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":431,"column":0},"generated":{"line":431,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":432,"column":0},"generated":{"line":432,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":433,"column":0},"generated":{"line":433,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":434,"column":0},"generated":{"line":434,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":435,"column":0},"generated":{"line":435,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":436,"column":0},"generated":{"line":436,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":437,"column":0},"generated":{"line":437,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":438,"column":0},"generated":{"line":438,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":439,"column":0},"generated":{"line":439,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":440,"column":0},"generated":{"line":440,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":441,"column":0},"generated":{"line":441,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":442,"column":0},"generated":{"line":442,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":443,"column":0},"generated":{"line":443,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":444,"column":0},"generated":{"line":444,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":445,"column":0},"generated":{"line":445,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":446,"column":0},"generated":{"line":446,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":447,"column":0},"generated":{"line":447,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":448,"column":0},"generated":{"line":448,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":449,"column":0},"generated":{"line":449,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":450,"column":0},"generated":{"line":450,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":451,"column":0},"generated":{"line":451,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":452,"column":0},"generated":{"line":452,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":453,"column":0},"generated":{"line":453,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":454,"column":0},"generated":{"line":454,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":455,"column":0},"generated":{"line":455,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":456,"column":0},"generated":{"line":456,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":457,"column":0},"generated":{"line":457,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":458,"column":0},"generated":{"line":458,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":459,"column":0},"generated":{"line":459,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":460,"column":0},"generated":{"line":460,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":461,"column":0},"generated":{"line":461,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":462,"column":0},"generated":{"line":462,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":463,"column":0},"generated":{"line":463,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":464,"column":0},"generated":{"line":464,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":465,"column":0},"generated":{"line":465,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":466,"column":0},"generated":{"line":466,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":467,"column":0},"generated":{"line":467,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":468,"column":0},"generated":{"line":468,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":469,"column":0},"generated":{"line":469,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":470,"column":0},"generated":{"line":470,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":471,"column":0},"generated":{"line":471,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":472,"column":0},"generated":{"line":472,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":473,"column":0},"generated":{"line":473,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":474,"column":0},"generated":{"line":474,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":475,"column":0},"generated":{"line":475,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":476,"column":0},"generated":{"line":476,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":477,"column":0},"generated":{"line":477,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":478,"column":0},"generated":{"line":478,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":479,"column":0},"generated":{"line":479,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":480,"column":0},"generated":{"line":480,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":481,"column":0},"generated":{"line":481,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":482,"column":0},"generated":{"line":482,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":483,"column":0},"generated":{"line":483,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":484,"column":0},"generated":{"line":484,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":485,"column":0},"generated":{"line":485,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":486,"column":0},"generated":{"line":486,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":487,"column":0},"generated":{"line":487,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":488,"column":0},"generated":{"line":488,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":489,"column":0},"generated":{"line":489,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":490,"column":0},"generated":{"line":490,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":491,"column":0},"generated":{"line":491,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":492,"column":0},"generated":{"line":492,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":493,"column":0},"generated":{"line":493,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":494,"column":0},"generated":{"line":494,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":495,"column":0},"generated":{"line":495,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":496,"column":0},"generated":{"line":496,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":497,"column":0},"generated":{"line":497,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":498,"column":0},"generated":{"line":498,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":499,"column":0},"generated":{"line":499,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":500,"column":0},"generated":{"line":500,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":501,"column":0},"generated":{"line":501,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":502,"column":0},"generated":{"line":502,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":503,"column":0},"generated":{"line":503,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":504,"column":0},"generated":{"line":504,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":505,"column":0},"generated":{"line":505,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":506,"column":0},"generated":{"line":506,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":507,"column":0},"generated":{"line":507,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":508,"column":0},"generated":{"line":508,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":509,"column":0},"generated":{"line":509,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":510,"column":0},"generated":{"line":510,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":511,"column":0},"generated":{"line":511,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":512,"column":0},"generated":{"line":512,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":513,"column":0},"generated":{"line":513,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":514,"column":0},"generated":{"line":514,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":515,"column":0},"generated":{"line":515,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":516,"column":0},"generated":{"line":516,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":517,"column":0},"generated":{"line":517,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":518,"column":0},"generated":{"line":518,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":519,"column":0},"generated":{"line":519,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":520,"column":0},"generated":{"line":520,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":521,"column":0},"generated":{"line":521,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":522,"column":0},"generated":{"line":522,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":523,"column":0},"generated":{"line":523,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":524,"column":0},"generated":{"line":524,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":525,"column":0},"generated":{"line":525,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":526,"column":0},"generated":{"line":526,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":527,"column":0},"generated":{"line":527,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":528,"column":0},"generated":{"line":528,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":529,"column":0},"generated":{"line":529,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":530,"column":0},"generated":{"line":530,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":531,"column":0},"generated":{"line":531,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":532,"column":0},"generated":{"line":532,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":533,"column":0},"generated":{"line":533,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":534,"column":0},"generated":{"line":534,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":535,"column":0},"generated":{"line":535,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":536,"column":0},"generated":{"line":536,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":537,"column":0},"generated":{"line":537,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":538,"column":0},"generated":{"line":538,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":539,"column":0},"generated":{"line":539,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":540,"column":0},"generated":{"line":540,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":541,"column":0},"generated":{"line":541,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":542,"column":0},"generated":{"line":542,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":543,"column":0},"generated":{"line":543,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":544,"column":0},"generated":{"line":544,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":545,"column":0},"generated":{"line":545,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":546,"column":0},"generated":{"line":546,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":547,"column":0},"generated":{"line":547,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":548,"column":0},"generated":{"line":548,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":549,"column":0},"generated":{"line":549,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":550,"column":0},"generated":{"line":550,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":551,"column":0},"generated":{"line":551,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":552,"column":0},"generated":{"line":552,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":553,"column":0},"generated":{"line":553,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":554,"column":0},"generated":{"line":554,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":555,"column":0},"generated":{"line":555,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":556,"column":0},"generated":{"line":556,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":557,"column":0},"generated":{"line":557,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":558,"column":0},"generated":{"line":558,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":559,"column":0},"generated":{"line":559,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":560,"column":0},"generated":{"line":560,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":561,"column":0},"generated":{"line":561,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":562,"column":0},"generated":{"line":562,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":563,"column":0},"generated":{"line":563,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":564,"column":0},"generated":{"line":564,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":565,"column":0},"generated":{"line":565,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":566,"column":0},"generated":{"line":566,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":567,"column":0},"generated":{"line":567,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":568,"column":0},"generated":{"line":568,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":569,"column":0},"generated":{"line":569,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":570,"column":0},"generated":{"line":570,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":571,"column":0},"generated":{"line":571,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":572,"column":0},"generated":{"line":572,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":573,"column":0},"generated":{"line":573,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":574,"column":0},"generated":{"line":574,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":575,"column":0},"generated":{"line":575,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":576,"column":0},"generated":{"line":576,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":577,"column":0},"generated":{"line":577,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":578,"column":0},"generated":{"line":578,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":579,"column":0},"generated":{"line":579,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":580,"column":0},"generated":{"line":580,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":581,"column":0},"generated":{"line":581,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":582,"column":0},"generated":{"line":582,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":583,"column":0},"generated":{"line":583,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":584,"column":0},"generated":{"line":584,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":585,"column":0},"generated":{"line":585,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":586,"column":0},"generated":{"line":586,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":587,"column":0},"generated":{"line":587,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":588,"column":0},"generated":{"line":588,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":589,"column":0},"generated":{"line":589,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":590,"column":0},"generated":{"line":590,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":591,"column":0},"generated":{"line":591,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":592,"column":0},"generated":{"line":592,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":593,"column":0},"generated":{"line":593,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":594,"column":0},"generated":{"line":594,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":595,"column":0},"generated":{"line":595,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":596,"column":0},"generated":{"line":596,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":597,"column":0},"generated":{"line":597,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":598,"column":0},"generated":{"line":598,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":599,"column":0},"generated":{"line":599,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":600,"column":0},"generated":{"line":600,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":601,"column":0},"generated":{"line":601,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":602,"column":0},"generated":{"line":602,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":603,"column":0},"generated":{"line":603,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":604,"column":0},"generated":{"line":604,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":605,"column":0},"generated":{"line":605,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":606,"column":0},"generated":{"line":606,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":607,"column":0},"generated":{"line":607,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":608,"column":0},"generated":{"line":608,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":609,"column":0},"generated":{"line":609,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":610,"column":0},"generated":{"line":610,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":611,"column":0},"generated":{"line":611,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":612,"column":0},"generated":{"line":612,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":613,"column":0},"generated":{"line":613,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":614,"column":0},"generated":{"line":614,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":615,"column":0},"generated":{"line":615,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":616,"column":0},"generated":{"line":616,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":617,"column":0},"generated":{"line":617,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":618,"column":0},"generated":{"line":618,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":619,"column":0},"generated":{"line":619,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":620,"column":0},"generated":{"line":620,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":621,"column":0},"generated":{"line":621,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":622,"column":0},"generated":{"line":622,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":623,"column":0},"generated":{"line":623,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":624,"column":0},"generated":{"line":624,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":625,"column":0},"generated":{"line":625,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":626,"column":0},"generated":{"line":626,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":627,"column":0},"generated":{"line":627,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":628,"column":0},"generated":{"line":628,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":629,"column":0},"generated":{"line":629,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":630,"column":0},"generated":{"line":630,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":631,"column":0},"generated":{"line":631,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":632,"column":0},"generated":{"line":632,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":633,"column":0},"generated":{"line":633,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":634,"column":0},"generated":{"line":634,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":635,"column":0},"generated":{"line":635,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":636,"column":0},"generated":{"line":636,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":637,"column":0},"generated":{"line":637,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":638,"column":0},"generated":{"line":638,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":639,"column":0},"generated":{"line":639,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":640,"column":0},"generated":{"line":640,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":641,"column":0},"generated":{"line":641,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":642,"column":0},"generated":{"line":642,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":643,"column":0},"generated":{"line":643,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":644,"column":0},"generated":{"line":644,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":645,"column":0},"generated":{"line":645,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":646,"column":0},"generated":{"line":646,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":647,"column":0},"generated":{"line":647,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":648,"column":0},"generated":{"line":648,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":649,"column":0},"generated":{"line":649,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":650,"column":0},"generated":{"line":650,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":651,"column":0},"generated":{"line":651,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":652,"column":0},"generated":{"line":652,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":653,"column":0},"generated":{"line":653,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":654,"column":0},"generated":{"line":654,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":655,"column":0},"generated":{"line":655,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":656,"column":0},"generated":{"line":656,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":657,"column":0},"generated":{"line":657,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":658,"column":0},"generated":{"line":658,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":659,"column":0},"generated":{"line":659,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":660,"column":0},"generated":{"line":660,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":661,"column":0},"generated":{"line":661,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":662,"column":0},"generated":{"line":662,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":663,"column":0},"generated":{"line":663,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":664,"column":0},"generated":{"line":664,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":665,"column":0},"generated":{"line":665,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":666,"column":0},"generated":{"line":666,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":667,"column":0},"generated":{"line":667,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":668,"column":0},"generated":{"line":668,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":669,"column":0},"generated":{"line":669,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":670,"column":0},"generated":{"line":670,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":671,"column":0},"generated":{"line":671,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":672,"column":0},"generated":{"line":672,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":673,"column":0},"generated":{"line":673,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":674,"column":0},"generated":{"line":674,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":675,"column":0},"generated":{"line":675,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":676,"column":0},"generated":{"line":676,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":677,"column":0},"generated":{"line":677,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":678,"column":0},"generated":{"line":678,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":679,"column":0},"generated":{"line":679,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":680,"column":0},"generated":{"line":680,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":681,"column":0},"generated":{"line":681,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":682,"column":0},"generated":{"line":682,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":683,"column":0},"generated":{"line":683,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":684,"column":0},"generated":{"line":684,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":685,"column":0},"generated":{"line":685,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":686,"column":0},"generated":{"line":686,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":687,"column":0},"generated":{"line":687,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":688,"column":0},"generated":{"line":688,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":689,"column":0},"generated":{"line":689,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":690,"column":0},"generated":{"line":690,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":691,"column":0},"generated":{"line":691,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":692,"column":0},"generated":{"line":692,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":693,"column":0},"generated":{"line":693,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":694,"column":0},"generated":{"line":694,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":695,"column":0},"generated":{"line":695,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":696,"column":0},"generated":{"line":696,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":697,"column":0},"generated":{"line":697,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":698,"column":0},"generated":{"line":698,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":699,"column":0},"generated":{"line":699,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":700,"column":0},"generated":{"line":700,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":701,"column":0},"generated":{"line":701,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":702,"column":0},"generated":{"line":702,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":703,"column":0},"generated":{"line":703,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":704,"column":0},"generated":{"line":704,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":705,"column":0},"generated":{"line":705,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":706,"column":0},"generated":{"line":706,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":707,"column":0},"generated":{"line":707,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":708,"column":0},"generated":{"line":708,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":709,"column":0},"generated":{"line":709,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":710,"column":0},"generated":{"line":710,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":711,"column":0},"generated":{"line":711,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":712,"column":0},"generated":{"line":712,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":713,"column":0},"generated":{"line":713,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":714,"column":0},"generated":{"line":714,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":715,"column":0},"generated":{"line":715,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":716,"column":0},"generated":{"line":716,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":717,"column":0},"generated":{"line":717,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":718,"column":0},"generated":{"line":718,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":719,"column":0},"generated":{"line":719,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":720,"column":0},"generated":{"line":720,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":721,"column":0},"generated":{"line":721,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":722,"column":0},"generated":{"line":722,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":723,"column":0},"generated":{"line":723,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":724,"column":0},"generated":{"line":724,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":725,"column":0},"generated":{"line":725,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":726,"column":0},"generated":{"line":726,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":727,"column":0},"generated":{"line":727,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":728,"column":0},"generated":{"line":728,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":729,"column":0},"generated":{"line":729,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":730,"column":0},"generated":{"line":730,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":731,"column":0},"generated":{"line":731,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":732,"column":0},"generated":{"line":732,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":733,"column":0},"generated":{"line":733,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":734,"column":0},"generated":{"line":734,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":735,"column":0},"generated":{"line":735,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":736,"column":0},"generated":{"line":736,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":737,"column":0},"generated":{"line":737,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":738,"column":0},"generated":{"line":738,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":739,"column":0},"generated":{"line":739,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":740,"column":0},"generated":{"line":740,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":741,"column":0},"generated":{"line":741,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":742,"column":0},"generated":{"line":742,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":743,"column":0},"generated":{"line":743,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":744,"column":0},"generated":{"line":744,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":745,"column":0},"generated":{"line":745,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":746,"column":0},"generated":{"line":746,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":747,"column":0},"generated":{"line":747,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":748,"column":0},"generated":{"line":748,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":749,"column":0},"generated":{"line":749,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":750,"column":0},"generated":{"line":750,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":751,"column":0},"generated":{"line":751,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":752,"column":0},"generated":{"line":752,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":753,"column":0},"generated":{"line":753,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":754,"column":0},"generated":{"line":754,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":755,"column":0},"generated":{"line":755,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":756,"column":0},"generated":{"line":756,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":757,"column":0},"generated":{"line":757,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":758,"column":0},"generated":{"line":758,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":759,"column":0},"generated":{"line":759,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":760,"column":0},"generated":{"line":760,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":761,"column":0},"generated":{"line":761,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":762,"column":0},"generated":{"line":762,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":763,"column":0},"generated":{"line":763,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":764,"column":0},"generated":{"line":764,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":765,"column":0},"generated":{"line":765,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":766,"column":0},"generated":{"line":766,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":767,"column":0},"generated":{"line":767,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":768,"column":0},"generated":{"line":768,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":769,"column":0},"generated":{"line":769,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":770,"column":0},"generated":{"line":770,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":771,"column":0},"generated":{"line":771,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":772,"column":0},"generated":{"line":772,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":773,"column":0},"generated":{"line":773,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":774,"column":0},"generated":{"line":774,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":775,"column":0},"generated":{"line":775,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":776,"column":0},"generated":{"line":776,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":777,"column":0},"generated":{"line":777,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":778,"column":0},"generated":{"line":778,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":779,"column":0},"generated":{"line":779,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":780,"column":0},"generated":{"line":780,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":781,"column":0},"generated":{"line":781,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":782,"column":0},"generated":{"line":782,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":783,"column":0},"generated":{"line":783,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":784,"column":0},"generated":{"line":784,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":785,"column":0},"generated":{"line":785,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":786,"column":0},"generated":{"line":786,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":787,"column":0},"generated":{"line":787,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":788,"column":0},"generated":{"line":788,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":789,"column":0},"generated":{"line":789,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":790,"column":0},"generated":{"line":790,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":791,"column":0},"generated":{"line":791,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":792,"column":0},"generated":{"line":792,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":793,"column":0},"generated":{"line":793,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":794,"column":0},"generated":{"line":794,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":795,"column":0},"generated":{"line":795,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":796,"column":0},"generated":{"line":796,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":797,"column":0},"generated":{"line":797,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":798,"column":0},"generated":{"line":798,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":799,"column":0},"generated":{"line":799,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":800,"column":0},"generated":{"line":800,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":801,"column":0},"generated":{"line":801,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":802,"column":0},"generated":{"line":802,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":803,"column":0},"generated":{"line":803,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":804,"column":0},"generated":{"line":804,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":805,"column":0},"generated":{"line":805,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":806,"column":0},"generated":{"line":806,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":807,"column":0},"generated":{"line":807,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":808,"column":0},"generated":{"line":808,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":809,"column":0},"generated":{"line":809,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":810,"column":0},"generated":{"line":810,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":811,"column":0},"generated":{"line":811,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":812,"column":0},"generated":{"line":812,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":813,"column":0},"generated":{"line":813,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":814,"column":0},"generated":{"line":814,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":815,"column":0},"generated":{"line":815,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":816,"column":0},"generated":{"line":816,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":817,"column":0},"generated":{"line":817,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":818,"column":0},"generated":{"line":818,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":819,"column":0},"generated":{"line":819,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":820,"column":0},"generated":{"line":820,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":821,"column":0},"generated":{"line":821,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":822,"column":0},"generated":{"line":822,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":823,"column":0},"generated":{"line":823,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":824,"column":0},"generated":{"line":824,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":825,"column":0},"generated":{"line":825,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":826,"column":0},"generated":{"line":826,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":827,"column":0},"generated":{"line":827,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":828,"column":0},"generated":{"line":828,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":829,"column":0},"generated":{"line":829,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":830,"column":0},"generated":{"line":830,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":831,"column":0},"generated":{"line":831,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":832,"column":0},"generated":{"line":832,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":833,"column":0},"generated":{"line":833,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":834,"column":0},"generated":{"line":834,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":835,"column":0},"generated":{"line":835,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":836,"column":0},"generated":{"line":836,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":837,"column":0},"generated":{"line":837,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":838,"column":0},"generated":{"line":838,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":839,"column":0},"generated":{"line":839,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":840,"column":0},"generated":{"line":840,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":841,"column":0},"generated":{"line":841,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":842,"column":0},"generated":{"line":842,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":843,"column":0},"generated":{"line":843,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":844,"column":0},"generated":{"line":844,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":845,"column":0},"generated":{"line":845,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":846,"column":0},"generated":{"line":846,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":847,"column":0},"generated":{"line":847,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":848,"column":0},"generated":{"line":848,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":849,"column":0},"generated":{"line":849,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":850,"column":0},"generated":{"line":850,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":851,"column":0},"generated":{"line":851,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":852,"column":0},"generated":{"line":852,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":853,"column":0},"generated":{"line":853,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":854,"column":0},"generated":{"line":854,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":855,"column":0},"generated":{"line":855,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":856,"column":0},"generated":{"line":856,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":857,"column":0},"generated":{"line":857,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":858,"column":0},"generated":{"line":858,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":859,"column":0},"generated":{"line":859,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":860,"column":0},"generated":{"line":860,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":861,"column":0},"generated":{"line":861,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":862,"column":0},"generated":{"line":862,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":863,"column":0},"generated":{"line":863,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":864,"column":0},"generated":{"line":864,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":865,"column":0},"generated":{"line":865,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":866,"column":0},"generated":{"line":866,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":867,"column":0},"generated":{"line":867,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":868,"column":0},"generated":{"line":868,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":869,"column":0},"generated":{"line":869,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":870,"column":0},"generated":{"line":870,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":871,"column":0},"generated":{"line":871,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":872,"column":0},"generated":{"line":872,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":873,"column":0},"generated":{"line":873,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":874,"column":0},"generated":{"line":874,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":875,"column":0},"generated":{"line":875,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":876,"column":0},"generated":{"line":876,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":877,"column":0},"generated":{"line":877,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":878,"column":0},"generated":{"line":878,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":879,"column":0},"generated":{"line":879,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":880,"column":0},"generated":{"line":880,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":881,"column":0},"generated":{"line":881,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":882,"column":0},"generated":{"line":882,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":883,"column":0},"generated":{"line":883,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":884,"column":0},"generated":{"line":884,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":885,"column":0},"generated":{"line":885,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":886,"column":0},"generated":{"line":886,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":887,"column":0},"generated":{"line":887,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":888,"column":0},"generated":{"line":888,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":889,"column":0},"generated":{"line":889,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":890,"column":0},"generated":{"line":890,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":891,"column":0},"generated":{"line":891,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":892,"column":0},"generated":{"line":892,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":893,"column":0},"generated":{"line":893,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":894,"column":0},"generated":{"line":894,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":895,"column":0},"generated":{"line":895,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":896,"column":0},"generated":{"line":896,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":897,"column":0},"generated":{"line":897,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":898,"column":0},"generated":{"line":898,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":899,"column":0},"generated":{"line":899,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":900,"column":0},"generated":{"line":900,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":901,"column":0},"generated":{"line":901,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":902,"column":0},"generated":{"line":902,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":903,"column":0},"generated":{"line":903,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":904,"column":0},"generated":{"line":904,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":905,"column":0},"generated":{"line":905,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":906,"column":0},"generated":{"line":906,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":907,"column":0},"generated":{"line":907,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":908,"column":0},"generated":{"line":908,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":909,"column":0},"generated":{"line":909,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":910,"column":0},"generated":{"line":910,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":911,"column":0},"generated":{"line":911,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":912,"column":0},"generated":{"line":912,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":913,"column":0},"generated":{"line":913,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":914,"column":0},"generated":{"line":914,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":915,"column":0},"generated":{"line":915,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":916,"column":0},"generated":{"line":916,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":917,"column":0},"generated":{"line":917,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":918,"column":0},"generated":{"line":918,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":919,"column":0},"generated":{"line":919,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":920,"column":0},"generated":{"line":920,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":921,"column":0},"generated":{"line":921,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":922,"column":0},"generated":{"line":922,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":923,"column":0},"generated":{"line":923,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":924,"column":0},"generated":{"line":924,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":925,"column":0},"generated":{"line":925,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":926,"column":0},"generated":{"line":926,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":927,"column":0},"generated":{"line":927,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":928,"column":0},"generated":{"line":928,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":929,"column":0},"generated":{"line":929,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":930,"column":0},"generated":{"line":930,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":931,"column":0},"generated":{"line":931,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":932,"column":0},"generated":{"line":932,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":933,"column":0},"generated":{"line":933,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":934,"column":0},"generated":{"line":934,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":935,"column":0},"generated":{"line":935,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":936,"column":0},"generated":{"line":936,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":937,"column":0},"generated":{"line":937,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":938,"column":0},"generated":{"line":938,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":939,"column":0},"generated":{"line":939,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":940,"column":0},"generated":{"line":940,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":941,"column":0},"generated":{"line":941,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":942,"column":0},"generated":{"line":942,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":943,"column":0},"generated":{"line":943,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":944,"column":0},"generated":{"line":944,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":945,"column":0},"generated":{"line":945,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":946,"column":0},"generated":{"line":946,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":947,"column":0},"generated":{"line":947,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":948,"column":0},"generated":{"line":948,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":949,"column":0},"generated":{"line":949,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":950,"column":0},"generated":{"line":950,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":951,"column":0},"generated":{"line":951,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":952,"column":0},"generated":{"line":952,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":953,"column":0},"generated":{"line":953,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":954,"column":0},"generated":{"line":954,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":955,"column":0},"generated":{"line":955,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":956,"column":0},"generated":{"line":956,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":957,"column":0},"generated":{"line":957,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":958,"column":0},"generated":{"line":958,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":959,"column":0},"generated":{"line":959,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":960,"column":0},"generated":{"line":960,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":961,"column":0},"generated":{"line":961,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":962,"column":0},"generated":{"line":962,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":963,"column":0},"generated":{"line":963,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":964,"column":0},"generated":{"line":964,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":965,"column":0},"generated":{"line":965,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":966,"column":0},"generated":{"line":966,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":967,"column":0},"generated":{"line":967,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":968,"column":0},"generated":{"line":968,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":969,"column":0},"generated":{"line":969,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":970,"column":0},"generated":{"line":970,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":971,"column":0},"generated":{"line":971,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":972,"column":0},"generated":{"line":972,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":973,"column":0},"generated":{"line":973,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":974,"column":0},"generated":{"line":974,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":975,"column":0},"generated":{"line":975,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":976,"column":0},"generated":{"line":976,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":977,"column":0},"generated":{"line":977,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":978,"column":0},"generated":{"line":978,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":979,"column":0},"generated":{"line":979,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":980,"column":0},"generated":{"line":980,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":981,"column":0},"generated":{"line":981,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":982,"column":0},"generated":{"line":982,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":983,"column":0},"generated":{"line":983,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":984,"column":0},"generated":{"line":984,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":985,"column":0},"generated":{"line":985,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":986,"column":0},"generated":{"line":986,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":987,"column":0},"generated":{"line":987,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":988,"column":0},"generated":{"line":988,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":989,"column":0},"generated":{"line":989,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":990,"column":0},"generated":{"line":990,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":991,"column":0},"generated":{"line":991,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":992,"column":0},"generated":{"line":992,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":993,"column":0},"generated":{"line":993,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":994,"column":0},"generated":{"line":994,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":995,"column":0},"generated":{"line":995,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":996,"column":0},"generated":{"line":996,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":997,"column":0},"generated":{"line":997,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":998,"column":0},"generated":{"line":998,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":999,"column":0},"generated":{"line":999,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1000,"column":0},"generated":{"line":1000,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1001,"column":0},"generated":{"line":1001,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1002,"column":0},"generated":{"line":1002,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1003,"column":0},"generated":{"line":1003,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1004,"column":0},"generated":{"line":1004,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1005,"column":0},"generated":{"line":1005,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1006,"column":0},"generated":{"line":1006,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1007,"column":0},"generated":{"line":1007,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1008,"column":0},"generated":{"line":1008,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1009,"column":0},"generated":{"line":1009,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1010,"column":0},"generated":{"line":1010,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1011,"column":0},"generated":{"line":1011,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1012,"column":0},"generated":{"line":1012,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1013,"column":0},"generated":{"line":1013,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1014,"column":0},"generated":{"line":1014,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1015,"column":0},"generated":{"line":1015,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1016,"column":0},"generated":{"line":1016,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1017,"column":0},"generated":{"line":1017,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1018,"column":0},"generated":{"line":1018,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1019,"column":0},"generated":{"line":1019,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1020,"column":0},"generated":{"line":1020,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1021,"column":0},"generated":{"line":1021,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1022,"column":0},"generated":{"line":1022,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1023,"column":0},"generated":{"line":1023,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1024,"column":0},"generated":{"line":1024,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1025,"column":0},"generated":{"line":1025,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1026,"column":0},"generated":{"line":1026,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1027,"column":0},"generated":{"line":1027,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1028,"column":0},"generated":{"line":1028,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1029,"column":0},"generated":{"line":1029,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1030,"column":0},"generated":{"line":1030,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1031,"column":0},"generated":{"line":1031,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1032,"column":0},"generated":{"line":1032,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1033,"column":0},"generated":{"line":1033,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1034,"column":0},"generated":{"line":1034,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1035,"column":0},"generated":{"line":1035,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1036,"column":0},"generated":{"line":1036,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1037,"column":0},"generated":{"line":1037,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1038,"column":0},"generated":{"line":1038,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1039,"column":0},"generated":{"line":1039,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1040,"column":0},"generated":{"line":1040,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1041,"column":0},"generated":{"line":1041,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1042,"column":0},"generated":{"line":1042,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1043,"column":0},"generated":{"line":1043,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1044,"column":0},"generated":{"line":1044,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1045,"column":0},"generated":{"line":1045,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1046,"column":0},"generated":{"line":1046,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1047,"column":0},"generated":{"line":1047,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1048,"column":0},"generated":{"line":1048,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1049,"column":0},"generated":{"line":1049,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1050,"column":0},"generated":{"line":1050,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1051,"column":0},"generated":{"line":1051,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1052,"column":0},"generated":{"line":1052,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1053,"column":0},"generated":{"line":1053,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1054,"column":0},"generated":{"line":1054,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1055,"column":0},"generated":{"line":1055,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1056,"column":0},"generated":{"line":1056,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1057,"column":0},"generated":{"line":1057,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1058,"column":0},"generated":{"line":1058,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1059,"column":0},"generated":{"line":1059,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1060,"column":0},"generated":{"line":1060,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1061,"column":0},"generated":{"line":1061,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1062,"column":0},"generated":{"line":1062,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1063,"column":0},"generated":{"line":1063,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1064,"column":0},"generated":{"line":1064,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1065,"column":0},"generated":{"line":1065,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1066,"column":0},"generated":{"line":1066,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1067,"column":0},"generated":{"line":1067,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1068,"column":0},"generated":{"line":1068,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1069,"column":0},"generated":{"line":1069,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1070,"column":0},"generated":{"line":1070,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1071,"column":0},"generated":{"line":1071,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1072,"column":0},"generated":{"line":1072,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1073,"column":0},"generated":{"line":1073,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1074,"column":0},"generated":{"line":1074,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1075,"column":0},"generated":{"line":1075,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1076,"column":0},"generated":{"line":1076,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1077,"column":0},"generated":{"line":1077,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1078,"column":0},"generated":{"line":1078,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1079,"column":0},"generated":{"line":1079,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1080,"column":0},"generated":{"line":1080,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1081,"column":0},"generated":{"line":1081,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1082,"column":0},"generated":{"line":1082,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1083,"column":0},"generated":{"line":1083,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1084,"column":0},"generated":{"line":1084,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1085,"column":0},"generated":{"line":1085,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1086,"column":0},"generated":{"line":1086,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1087,"column":0},"generated":{"line":1087,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1088,"column":0},"generated":{"line":1088,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1089,"column":0},"generated":{"line":1089,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1090,"column":0},"generated":{"line":1090,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1091,"column":0},"generated":{"line":1091,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1092,"column":0},"generated":{"line":1092,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1093,"column":0},"generated":{"line":1093,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1094,"column":0},"generated":{"line":1094,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1095,"column":0},"generated":{"line":1095,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1096,"column":0},"generated":{"line":1096,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1097,"column":0},"generated":{"line":1097,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1098,"column":0},"generated":{"line":1098,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1099,"column":0},"generated":{"line":1099,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1100,"column":0},"generated":{"line":1100,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1101,"column":0},"generated":{"line":1101,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1102,"column":0},"generated":{"line":1102,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1103,"column":0},"generated":{"line":1103,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1104,"column":0},"generated":{"line":1104,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1105,"column":0},"generated":{"line":1105,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1106,"column":0},"generated":{"line":1106,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1107,"column":0},"generated":{"line":1107,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1108,"column":0},"generated":{"line":1108,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1109,"column":0},"generated":{"line":1109,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1110,"column":0},"generated":{"line":1110,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1111,"column":0},"generated":{"line":1111,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1112,"column":0},"generated":{"line":1112,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1113,"column":0},"generated":{"line":1113,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1114,"column":0},"generated":{"line":1114,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1115,"column":0},"generated":{"line":1115,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1116,"column":0},"generated":{"line":1116,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1117,"column":0},"generated":{"line":1117,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1118,"column":0},"generated":{"line":1118,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1119,"column":0},"generated":{"line":1119,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1120,"column":0},"generated":{"line":1120,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1121,"column":0},"generated":{"line":1121,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1122,"column":0},"generated":{"line":1122,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1123,"column":0},"generated":{"line":1123,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1124,"column":0},"generated":{"line":1124,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1125,"column":0},"generated":{"line":1125,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1126,"column":0},"generated":{"line":1126,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1127,"column":0},"generated":{"line":1127,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1128,"column":0},"generated":{"line":1128,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1129,"column":0},"generated":{"line":1129,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1130,"column":0},"generated":{"line":1130,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1131,"column":0},"generated":{"line":1131,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1132,"column":0},"generated":{"line":1132,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1133,"column":0},"generated":{"line":1133,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1134,"column":0},"generated":{"line":1134,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1135,"column":0},"generated":{"line":1135,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1136,"column":0},"generated":{"line":1136,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1137,"column":0},"generated":{"line":1137,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1138,"column":0},"generated":{"line":1138,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1139,"column":0},"generated":{"line":1139,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1140,"column":0},"generated":{"line":1140,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1141,"column":0},"generated":{"line":1141,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1142,"column":0},"generated":{"line":1142,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1143,"column":0},"generated":{"line":1143,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1144,"column":0},"generated":{"line":1144,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1145,"column":0},"generated":{"line":1145,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1146,"column":0},"generated":{"line":1146,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1147,"column":0},"generated":{"line":1147,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1148,"column":0},"generated":{"line":1148,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1149,"column":0},"generated":{"line":1149,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1150,"column":0},"generated":{"line":1150,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1151,"column":0},"generated":{"line":1151,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1152,"column":0},"generated":{"line":1152,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1153,"column":0},"generated":{"line":1153,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1154,"column":0},"generated":{"line":1154,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1155,"column":0},"generated":{"line":1155,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1156,"column":0},"generated":{"line":1156,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1157,"column":0},"generated":{"line":1157,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1158,"column":0},"generated":{"line":1158,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1159,"column":0},"generated":{"line":1159,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1160,"column":0},"generated":{"line":1160,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1161,"column":0},"generated":{"line":1161,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1162,"column":0},"generated":{"line":1162,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1163,"column":0},"generated":{"line":1163,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1164,"column":0},"generated":{"line":1164,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1165,"column":0},"generated":{"line":1165,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1166,"column":0},"generated":{"line":1166,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1167,"column":0},"generated":{"line":1167,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1168,"column":0},"generated":{"line":1168,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1169,"column":0},"generated":{"line":1169,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1170,"column":0},"generated":{"line":1170,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1171,"column":0},"generated":{"line":1171,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1172,"column":0},"generated":{"line":1172,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1173,"column":0},"generated":{"line":1173,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1174,"column":0},"generated":{"line":1174,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1175,"column":0},"generated":{"line":1175,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1176,"column":0},"generated":{"line":1176,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1177,"column":0},"generated":{"line":1177,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1178,"column":0},"generated":{"line":1178,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1179,"column":0},"generated":{"line":1179,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1180,"column":0},"generated":{"line":1180,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1181,"column":0},"generated":{"line":1181,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1182,"column":0},"generated":{"line":1182,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1183,"column":0},"generated":{"line":1183,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1184,"column":0},"generated":{"line":1184,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1185,"column":0},"generated":{"line":1185,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1186,"column":0},"generated":{"line":1186,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1187,"column":0},"generated":{"line":1187,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1188,"column":0},"generated":{"line":1188,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1189,"column":0},"generated":{"line":1189,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1190,"column":0},"generated":{"line":1190,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1191,"column":0},"generated":{"line":1191,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1192,"column":0},"generated":{"line":1192,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1193,"column":0},"generated":{"line":1193,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1194,"column":0},"generated":{"line":1194,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1195,"column":0},"generated":{"line":1195,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1196,"column":0},"generated":{"line":1196,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1197,"column":0},"generated":{"line":1197,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1198,"column":0},"generated":{"line":1198,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1199,"column":0},"generated":{"line":1199,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1200,"column":0},"generated":{"line":1200,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1201,"column":0},"generated":{"line":1201,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1202,"column":0},"generated":{"line":1202,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1203,"column":0},"generated":{"line":1203,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1204,"column":0},"generated":{"line":1204,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1205,"column":0},"generated":{"line":1205,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1206,"column":0},"generated":{"line":1206,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1207,"column":0},"generated":{"line":1207,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1208,"column":0},"generated":{"line":1208,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1209,"column":0},"generated":{"line":1209,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1210,"column":0},"generated":{"line":1210,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1211,"column":0},"generated":{"line":1211,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1212,"column":0},"generated":{"line":1212,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1213,"column":0},"generated":{"line":1213,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1214,"column":0},"generated":{"line":1214,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1215,"column":0},"generated":{"line":1215,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1216,"column":0},"generated":{"line":1216,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1217,"column":0},"generated":{"line":1217,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1218,"column":0},"generated":{"line":1218,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1219,"column":0},"generated":{"line":1219,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1220,"column":0},"generated":{"line":1220,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1221,"column":0},"generated":{"line":1221,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1222,"column":0},"generated":{"line":1222,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1223,"column":0},"generated":{"line":1223,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1224,"column":0},"generated":{"line":1224,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1225,"column":0},"generated":{"line":1225,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1226,"column":0},"generated":{"line":1226,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1227,"column":0},"generated":{"line":1227,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1228,"column":0},"generated":{"line":1228,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1229,"column":0},"generated":{"line":1229,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1230,"column":0},"generated":{"line":1230,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1231,"column":0},"generated":{"line":1231,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1232,"column":0},"generated":{"line":1232,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1233,"column":0},"generated":{"line":1233,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1234,"column":0},"generated":{"line":1234,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1235,"column":0},"generated":{"line":1235,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1236,"column":0},"generated":{"line":1236,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1237,"column":0},"generated":{"line":1237,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1238,"column":0},"generated":{"line":1238,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1239,"column":0},"generated":{"line":1239,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1240,"column":0},"generated":{"line":1240,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1241,"column":0},"generated":{"line":1241,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1242,"column":0},"generated":{"line":1242,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1243,"column":0},"generated":{"line":1243,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1244,"column":0},"generated":{"line":1244,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1245,"column":0},"generated":{"line":1245,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1246,"column":0},"generated":{"line":1246,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1247,"column":0},"generated":{"line":1247,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1248,"column":0},"generated":{"line":1248,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1249,"column":0},"generated":{"line":1249,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1250,"column":0},"generated":{"line":1250,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1251,"column":0},"generated":{"line":1251,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1252,"column":0},"generated":{"line":1252,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1253,"column":0},"generated":{"line":1253,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1254,"column":0},"generated":{"line":1254,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1255,"column":0},"generated":{"line":1255,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1256,"column":0},"generated":{"line":1256,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1257,"column":0},"generated":{"line":1257,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1258,"column":0},"generated":{"line":1258,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1259,"column":0},"generated":{"line":1259,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1260,"column":0},"generated":{"line":1260,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1261,"column":0},"generated":{"line":1261,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1262,"column":0},"generated":{"line":1262,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1263,"column":0},"generated":{"line":1263,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1264,"column":0},"generated":{"line":1264,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1265,"column":0},"generated":{"line":1265,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1266,"column":0},"generated":{"line":1266,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1267,"column":0},"generated":{"line":1267,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1268,"column":0},"generated":{"line":1268,"column":0}},{"source":"node_modules/@formatjs/icu-messageformat-parser/parser.js","original":{"line":1269,"column":0},"generated":{"line":1269,"column":0}}],"sources":{"node_modules/@formatjs/icu-messageformat-parser/parser.js":"\"use strict\";\nvar _a;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Parser = void 0;\nvar tslib_1 = require(\"tslib\");\nvar error_1 = require(\"./error\");\nvar types_1 = require(\"./types\");\nvar regex_generated_1 = require(\"./regex.generated\");\nvar icu_skeleton_parser_1 = require(\"@formatjs/icu-skeleton-parser\");\nfunction createLocation(start, end) {\n    return { start: start, end: end };\n}\n// #region Ponyfills\n// Consolidate these variables up top for easier toggling during debugging\nvar hasNativeStartsWith = !!String.prototype.startsWith;\nvar hasNativeFromCodePoint = !!String.fromCodePoint;\nvar hasNativeFromEntries = !!Object.fromEntries;\nvar hasNativeCodePointAt = !!String.prototype.codePointAt;\nvar hasTrimStart = !!String.prototype.trimStart;\nvar hasTrimEnd = !!String.prototype.trimEnd;\nvar hasNativeIsSafeInteger = !!Number.isSafeInteger;\nvar isSafeInteger = hasNativeIsSafeInteger\n    ? Number.isSafeInteger\n    : function (n) {\n        return (typeof n === 'number' &&\n            isFinite(n) &&\n            Math.floor(n) === n &&\n            Math.abs(n) <= 0x1fffffffffffff);\n    };\n// IE11 does not support y and u.\nvar REGEX_SUPPORTS_U_AND_Y = true;\ntry {\n    var re = RE('([^\\\\p{White_Space}\\\\p{Pattern_Syntax}]*)', 'yu');\n    /**\n     * legacy Edge or Xbox One browser\n     * Unicode flag support: supported\n     * Pattern_Syntax support: not supported\n     * See https://github.com/formatjs/formatjs/issues/2822\n     */\n    REGEX_SUPPORTS_U_AND_Y = ((_a = re.exec('a')) === null || _a === void 0 ? void 0 : _a[0]) === 'a';\n}\ncatch (_) {\n    REGEX_SUPPORTS_U_AND_Y = false;\n}\nvar startsWith = hasNativeStartsWith\n    ? // Native\n        function startsWith(s, search, position) {\n            return s.startsWith(search, position);\n        }\n    : // For IE11\n        function startsWith(s, search, position) {\n            return s.slice(position, position + search.length) === search;\n        };\nvar fromCodePoint = hasNativeFromCodePoint\n    ? String.fromCodePoint\n    : // IE11\n        function fromCodePoint() {\n            var codePoints = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                codePoints[_i] = arguments[_i];\n            }\n            var elements = '';\n            var length = codePoints.length;\n            var i = 0;\n            var code;\n            while (length > i) {\n                code = codePoints[i++];\n                if (code > 0x10ffff)\n                    throw RangeError(code + ' is not a valid code point');\n                elements +=\n                    code < 0x10000\n                        ? String.fromCharCode(code)\n                        : String.fromCharCode(((code -= 0x10000) >> 10) + 0xd800, (code % 0x400) + 0xdc00);\n            }\n            return elements;\n        };\nvar fromEntries = \n// native\nhasNativeFromEntries\n    ? Object.fromEntries\n    : // Ponyfill\n        function fromEntries(entries) {\n            var obj = {};\n            for (var _i = 0, entries_1 = entries; _i < entries_1.length; _i++) {\n                var _a = entries_1[_i], k = _a[0], v = _a[1];\n                obj[k] = v;\n            }\n            return obj;\n        };\nvar codePointAt = hasNativeCodePointAt\n    ? // Native\n        function codePointAt(s, index) {\n            return s.codePointAt(index);\n        }\n    : // IE 11\n        function codePointAt(s, index) {\n            var size = s.length;\n            if (index < 0 || index >= size) {\n                return undefined;\n            }\n            var first = s.charCodeAt(index);\n            var second;\n            return first < 0xd800 ||\n                first > 0xdbff ||\n                index + 1 === size ||\n                (second = s.charCodeAt(index + 1)) < 0xdc00 ||\n                second > 0xdfff\n                ? first\n                : ((first - 0xd800) << 10) + (second - 0xdc00) + 0x10000;\n        };\nvar trimStart = hasTrimStart\n    ? // Native\n        function trimStart(s) {\n            return s.trimStart();\n        }\n    : // Ponyfill\n        function trimStart(s) {\n            return s.replace(regex_generated_1.SPACE_SEPARATOR_START_REGEX, '');\n        };\nvar trimEnd = hasTrimEnd\n    ? // Native\n        function trimEnd(s) {\n            return s.trimEnd();\n        }\n    : // Ponyfill\n        function trimEnd(s) {\n            return s.replace(regex_generated_1.SPACE_SEPARATOR_END_REGEX, '');\n        };\n// Prevent minifier to translate new RegExp to literal form that might cause syntax error on IE11.\nfunction RE(s, flag) {\n    return new RegExp(s, flag);\n}\n// #endregion\nvar matchIdentifierAtIndex;\nif (REGEX_SUPPORTS_U_AND_Y) {\n    // Native\n    var IDENTIFIER_PREFIX_RE_1 = RE('([^\\\\p{White_Space}\\\\p{Pattern_Syntax}]*)', 'yu');\n    matchIdentifierAtIndex = function matchIdentifierAtIndex(s, index) {\n        var _a;\n        IDENTIFIER_PREFIX_RE_1.lastIndex = index;\n        var match = IDENTIFIER_PREFIX_RE_1.exec(s);\n        return (_a = match[1]) !== null && _a !== void 0 ? _a : '';\n    };\n}\nelse {\n    // IE11\n    matchIdentifierAtIndex = function matchIdentifierAtIndex(s, index) {\n        var match = [];\n        while (true) {\n            var c = codePointAt(s, index);\n            if (c === undefined || _isWhiteSpace(c) || _isPatternSyntax(c)) {\n                break;\n            }\n            match.push(c);\n            index += c >= 0x10000 ? 2 : 1;\n        }\n        return fromCodePoint.apply(void 0, match);\n    };\n}\nvar Parser = /** @class */ (function () {\n    function Parser(message, options) {\n        if (options === void 0) { options = {}; }\n        this.message = message;\n        this.position = { offset: 0, line: 1, column: 1 };\n        this.ignoreTag = !!options.ignoreTag;\n        this.requiresOtherClause = !!options.requiresOtherClause;\n        this.shouldParseSkeletons = !!options.shouldParseSkeletons;\n    }\n    Parser.prototype.parse = function () {\n        if (this.offset() !== 0) {\n            throw Error('parser can only be used once');\n        }\n        return this.parseMessage(0, '', false);\n    };\n    Parser.prototype.parseMessage = function (nestingLevel, parentArgType, expectingCloseTag) {\n        var elements = [];\n        while (!this.isEOF()) {\n            var char = this.char();\n            if (char === 123 /* `{` */) {\n                var result = this.parseArgument(nestingLevel, expectingCloseTag);\n                if (result.err) {\n                    return result;\n                }\n                elements.push(result.val);\n            }\n            else if (char === 125 /* `}` */ && nestingLevel > 0) {\n                break;\n            }\n            else if (char === 35 /* `#` */ &&\n                (parentArgType === 'plural' || parentArgType === 'selectordinal')) {\n                var position = this.clonePosition();\n                this.bump();\n                elements.push({\n                    type: types_1.TYPE.pound,\n                    location: createLocation(position, this.clonePosition()),\n                });\n            }\n            else if (char === 60 /* `<` */ &&\n                !this.ignoreTag &&\n                this.peek() === 47 // char code for '/'\n            ) {\n                if (expectingCloseTag) {\n                    break;\n                }\n                else {\n                    return this.error(error_1.ErrorKind.UNMATCHED_CLOSING_TAG, createLocation(this.clonePosition(), this.clonePosition()));\n                }\n            }\n            else if (char === 60 /* `<` */ &&\n                !this.ignoreTag &&\n                _isAlpha(this.peek() || 0)) {\n                var result = this.parseTag(nestingLevel, parentArgType);\n                if (result.err) {\n                    return result;\n                }\n                elements.push(result.val);\n            }\n            else {\n                var result = this.parseLiteral(nestingLevel, parentArgType);\n                if (result.err) {\n                    return result;\n                }\n                elements.push(result.val);\n            }\n        }\n        return { val: elements, err: null };\n    };\n    /**\n     * A tag name must start with an ASCII lower/upper case letter. The grammar is based on the\n     * [custom element name][] except that a dash is NOT always mandatory and uppercase letters\n     * are accepted:\n     *\n     * ```\n     * tag ::= \"<\" tagName (whitespace)* \"/>\" | \"<\" tagName (whitespace)* \">\" message \"</\" tagName (whitespace)* \">\"\n     * tagName ::= [a-z] (PENChar)*\n     * PENChar ::=\n     *     \"-\" | \".\" | [0-9] | \"_\" | [a-z] | [A-Z] | #xB7 | [#xC0-#xD6] | [#xD8-#xF6] | [#xF8-#x37D] |\n     *     [#x37F-#x1FFF] | [#x200C-#x200D] | [#x203F-#x2040] | [#x2070-#x218F] | [#x2C00-#x2FEF] |\n     *     [#x3001-#xD7FF] | [#xF900-#xFDCF] | [#xFDF0-#xFFFD] | [#x10000-#xEFFFF]\n     * ```\n     *\n     * [custom element name]: https://html.spec.whatwg.org/multipage/custom-elements.html#valid-custom-element-name\n     * NOTE: We're a bit more lax here since HTML technically does not allow uppercase HTML element but we do\n     * since other tag-based engines like React allow it\n     */\n    Parser.prototype.parseTag = function (nestingLevel, parentArgType) {\n        var startPosition = this.clonePosition();\n        this.bump(); // `<`\n        var tagName = this.parseTagName();\n        this.bumpSpace();\n        if (this.bumpIf('/>')) {\n            // Self closing tag\n            return {\n                val: {\n                    type: types_1.TYPE.literal,\n                    value: \"<\" + tagName + \"/>\",\n                    location: createLocation(startPosition, this.clonePosition()),\n                },\n                err: null,\n            };\n        }\n        else if (this.bumpIf('>')) {\n            var childrenResult = this.parseMessage(nestingLevel + 1, parentArgType, true);\n            if (childrenResult.err) {\n                return childrenResult;\n            }\n            var children = childrenResult.val;\n            // Expecting a close tag\n            var endTagStartPosition = this.clonePosition();\n            if (this.bumpIf('</')) {\n                if (this.isEOF() || !_isAlpha(this.char())) {\n                    return this.error(error_1.ErrorKind.INVALID_TAG, createLocation(endTagStartPosition, this.clonePosition()));\n                }\n                var closingTagNameStartPosition = this.clonePosition();\n                var closingTagName = this.parseTagName();\n                if (tagName !== closingTagName) {\n                    return this.error(error_1.ErrorKind.UNMATCHED_CLOSING_TAG, createLocation(closingTagNameStartPosition, this.clonePosition()));\n                }\n                this.bumpSpace();\n                if (!this.bumpIf('>')) {\n                    return this.error(error_1.ErrorKind.INVALID_TAG, createLocation(endTagStartPosition, this.clonePosition()));\n                }\n                return {\n                    val: {\n                        type: types_1.TYPE.tag,\n                        value: tagName,\n                        children: children,\n                        location: createLocation(startPosition, this.clonePosition()),\n                    },\n                    err: null,\n                };\n            }\n            else {\n                return this.error(error_1.ErrorKind.UNCLOSED_TAG, createLocation(startPosition, this.clonePosition()));\n            }\n        }\n        else {\n            return this.error(error_1.ErrorKind.INVALID_TAG, createLocation(startPosition, this.clonePosition()));\n        }\n    };\n    /**\n     * This method assumes that the caller has peeked ahead for the first tag character.\n     */\n    Parser.prototype.parseTagName = function () {\n        var startOffset = this.offset();\n        this.bump(); // the first tag name character\n        while (!this.isEOF() && _isPotentialElementNameChar(this.char())) {\n            this.bump();\n        }\n        return this.message.slice(startOffset, this.offset());\n    };\n    Parser.prototype.parseLiteral = function (nestingLevel, parentArgType) {\n        var start = this.clonePosition();\n        var value = '';\n        while (true) {\n            var parseQuoteResult = this.tryParseQuote(parentArgType);\n            if (parseQuoteResult) {\n                value += parseQuoteResult;\n                continue;\n            }\n            var parseUnquotedResult = this.tryParseUnquoted(nestingLevel, parentArgType);\n            if (parseUnquotedResult) {\n                value += parseUnquotedResult;\n                continue;\n            }\n            var parseLeftAngleResult = this.tryParseLeftAngleBracket();\n            if (parseLeftAngleResult) {\n                value += parseLeftAngleResult;\n                continue;\n            }\n            break;\n        }\n        var location = createLocation(start, this.clonePosition());\n        return {\n            val: { type: types_1.TYPE.literal, value: value, location: location },\n            err: null,\n        };\n    };\n    Parser.prototype.tryParseLeftAngleBracket = function () {\n        if (!this.isEOF() &&\n            this.char() === 60 /* `<` */ &&\n            (this.ignoreTag ||\n                // If at the opening tag or closing tag position, bail.\n                !_isAlphaOrSlash(this.peek() || 0))) {\n            this.bump(); // `<`\n            return '<';\n        }\n        return null;\n    };\n    /**\n     * Starting with ICU 4.8, an ASCII apostrophe only starts quoted text if it immediately precedes\n     * a character that requires quoting (that is, \"only where needed\"), and works the same in\n     * nested messages as on the top level of the pattern. The new behavior is otherwise compatible.\n     */\n    Parser.prototype.tryParseQuote = function (parentArgType) {\n        if (this.isEOF() || this.char() !== 39 /* `'` */) {\n            return null;\n        }\n        // Parse escaped char following the apostrophe, or early return if there is no escaped char.\n        // Check if is valid escaped character\n        switch (this.peek()) {\n            case 39 /* `'` */:\n                // double quote, should return as a single quote.\n                this.bump();\n                this.bump();\n                return \"'\";\n            // '{', '<', '>', '}'\n            case 123:\n            case 60:\n            case 62:\n            case 125:\n                break;\n            case 35: // '#'\n                if (parentArgType === 'plural' || parentArgType === 'selectordinal') {\n                    break;\n                }\n                return null;\n            default:\n                return null;\n        }\n        this.bump(); // apostrophe\n        var codePoints = [this.char()]; // escaped char\n        this.bump();\n        // read chars until the optional closing apostrophe is found\n        while (!this.isEOF()) {\n            var ch = this.char();\n            if (ch === 39 /* `'` */) {\n                if (this.peek() === 39 /* `'` */) {\n                    codePoints.push(39);\n                    // Bump one more time because we need to skip 2 characters.\n                    this.bump();\n                }\n                else {\n                    // Optional closing apostrophe.\n                    this.bump();\n                    break;\n                }\n            }\n            else {\n                codePoints.push(ch);\n            }\n            this.bump();\n        }\n        return fromCodePoint.apply(void 0, codePoints);\n    };\n    Parser.prototype.tryParseUnquoted = function (nestingLevel, parentArgType) {\n        if (this.isEOF()) {\n            return null;\n        }\n        var ch = this.char();\n        if (ch === 60 /* `<` */ ||\n            ch === 123 /* `{` */ ||\n            (ch === 35 /* `#` */ &&\n                (parentArgType === 'plural' || parentArgType === 'selectordinal')) ||\n            (ch === 125 /* `}` */ && nestingLevel > 0)) {\n            return null;\n        }\n        else {\n            this.bump();\n            return fromCodePoint(ch);\n        }\n    };\n    Parser.prototype.parseArgument = function (nestingLevel, expectingCloseTag) {\n        var openingBracePosition = this.clonePosition();\n        this.bump(); // `{`\n        this.bumpSpace();\n        if (this.isEOF()) {\n            return this.error(error_1.ErrorKind.EXPECT_ARGUMENT_CLOSING_BRACE, createLocation(openingBracePosition, this.clonePosition()));\n        }\n        if (this.char() === 125 /* `}` */) {\n            this.bump();\n            return this.error(error_1.ErrorKind.EMPTY_ARGUMENT, createLocation(openingBracePosition, this.clonePosition()));\n        }\n        // argument name\n        var value = this.parseIdentifierIfPossible().value;\n        if (!value) {\n            return this.error(error_1.ErrorKind.MALFORMED_ARGUMENT, createLocation(openingBracePosition, this.clonePosition()));\n        }\n        this.bumpSpace();\n        if (this.isEOF()) {\n            return this.error(error_1.ErrorKind.EXPECT_ARGUMENT_CLOSING_BRACE, createLocation(openingBracePosition, this.clonePosition()));\n        }\n        switch (this.char()) {\n            // Simple argument: `{name}`\n            case 125 /* `}` */: {\n                this.bump(); // `}`\n                return {\n                    val: {\n                        type: types_1.TYPE.argument,\n                        // value does not include the opening and closing braces.\n                        value: value,\n                        location: createLocation(openingBracePosition, this.clonePosition()),\n                    },\n                    err: null,\n                };\n            }\n            // Argument with options: `{name, format, ...}`\n            case 44 /* `,` */: {\n                this.bump(); // `,`\n                this.bumpSpace();\n                if (this.isEOF()) {\n                    return this.error(error_1.ErrorKind.EXPECT_ARGUMENT_CLOSING_BRACE, createLocation(openingBracePosition, this.clonePosition()));\n                }\n                return this.parseArgumentOptions(nestingLevel, expectingCloseTag, value, openingBracePosition);\n            }\n            default:\n                return this.error(error_1.ErrorKind.MALFORMED_ARGUMENT, createLocation(openingBracePosition, this.clonePosition()));\n        }\n    };\n    /**\n     * Advance the parser until the end of the identifier, if it is currently on\n     * an identifier character. Return an empty string otherwise.\n     */\n    Parser.prototype.parseIdentifierIfPossible = function () {\n        var startingPosition = this.clonePosition();\n        var startOffset = this.offset();\n        var value = matchIdentifierAtIndex(this.message, startOffset);\n        var endOffset = startOffset + value.length;\n        this.bumpTo(endOffset);\n        var endPosition = this.clonePosition();\n        var location = createLocation(startingPosition, endPosition);\n        return { value: value, location: location };\n    };\n    Parser.prototype.parseArgumentOptions = function (nestingLevel, expectingCloseTag, value, openingBracePosition) {\n        var _a;\n        // Parse this range:\n        // {name, type, style}\n        //        ^---^\n        var typeStartPosition = this.clonePosition();\n        var argType = this.parseIdentifierIfPossible().value;\n        var typeEndPosition = this.clonePosition();\n        switch (argType) {\n            case '':\n                // Expecting a style string number, date, time, plural, selectordinal, or select.\n                return this.error(error_1.ErrorKind.EXPECT_ARGUMENT_TYPE, createLocation(typeStartPosition, typeEndPosition));\n            case 'number':\n            case 'date':\n            case 'time': {\n                // Parse this range:\n                // {name, number, style}\n                //              ^-------^\n                this.bumpSpace();\n                var styleAndLocation = null;\n                if (this.bumpIf(',')) {\n                    this.bumpSpace();\n                    var styleStartPosition = this.clonePosition();\n                    var result = this.parseSimpleArgStyleIfPossible();\n                    if (result.err) {\n                        return result;\n                    }\n                    var style = trimEnd(result.val);\n                    if (style.length === 0) {\n                        return this.error(error_1.ErrorKind.EXPECT_ARGUMENT_STYLE, createLocation(this.clonePosition(), this.clonePosition()));\n                    }\n                    var styleLocation = createLocation(styleStartPosition, this.clonePosition());\n                    styleAndLocation = { style: style, styleLocation: styleLocation };\n                }\n                var argCloseResult = this.tryParseArgumentClose(openingBracePosition);\n                if (argCloseResult.err) {\n                    return argCloseResult;\n                }\n                var location_1 = createLocation(openingBracePosition, this.clonePosition());\n                // Extract style or skeleton\n                if (styleAndLocation && startsWith(styleAndLocation === null || styleAndLocation === void 0 ? void 0 : styleAndLocation.style, '::', 0)) {\n                    // Skeleton starts with `::`.\n                    var skeleton = trimStart(styleAndLocation.style.slice(2));\n                    if (argType === 'number') {\n                        var result = this.parseNumberSkeletonFromString(skeleton, styleAndLocation.styleLocation);\n                        if (result.err) {\n                            return result;\n                        }\n                        return {\n                            val: { type: types_1.TYPE.number, value: value, location: location_1, style: result.val },\n                            err: null,\n                        };\n                    }\n                    else {\n                        if (skeleton.length === 0) {\n                            return this.error(error_1.ErrorKind.EXPECT_DATE_TIME_SKELETON, location_1);\n                        }\n                        var style = {\n                            type: types_1.SKELETON_TYPE.dateTime,\n                            pattern: skeleton,\n                            location: styleAndLocation.styleLocation,\n                            parsedOptions: this.shouldParseSkeletons\n                                ? icu_skeleton_parser_1.parseDateTimeSkeleton(skeleton)\n                                : {},\n                        };\n                        var type = argType === 'date' ? types_1.TYPE.date : types_1.TYPE.time;\n                        return {\n                            val: { type: type, value: value, location: location_1, style: style },\n                            err: null,\n                        };\n                    }\n                }\n                // Regular style or no style.\n                return {\n                    val: {\n                        type: argType === 'number'\n                            ? types_1.TYPE.number\n                            : argType === 'date'\n                                ? types_1.TYPE.date\n                                : types_1.TYPE.time,\n                        value: value,\n                        location: location_1,\n                        style: (_a = styleAndLocation === null || styleAndLocation === void 0 ? void 0 : styleAndLocation.style) !== null && _a !== void 0 ? _a : null,\n                    },\n                    err: null,\n                };\n            }\n            case 'plural':\n            case 'selectordinal':\n            case 'select': {\n                // Parse this range:\n                // {name, plural, options}\n                //              ^---------^\n                var typeEndPosition_1 = this.clonePosition();\n                this.bumpSpace();\n                if (!this.bumpIf(',')) {\n                    return this.error(error_1.ErrorKind.EXPECT_SELECT_ARGUMENT_OPTIONS, createLocation(typeEndPosition_1, tslib_1.__assign({}, typeEndPosition_1)));\n                }\n                this.bumpSpace();\n                // Parse offset:\n                // {name, plural, offset:1, options}\n                //                ^-----^\n                //\n                // or the first option:\n                //\n                // {name, plural, one {...} other {...}}\n                //                ^--^\n                var identifierAndLocation = this.parseIdentifierIfPossible();\n                var pluralOffset = 0;\n                if (argType !== 'select' && identifierAndLocation.value === 'offset') {\n                    if (!this.bumpIf(':')) {\n                        return this.error(error_1.ErrorKind.EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE, createLocation(this.clonePosition(), this.clonePosition()));\n                    }\n                    this.bumpSpace();\n                    var result = this.tryParseDecimalInteger(error_1.ErrorKind.EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE, error_1.ErrorKind.INVALID_PLURAL_ARGUMENT_OFFSET_VALUE);\n                    if (result.err) {\n                        return result;\n                    }\n                    // Parse another identifier for option parsing\n                    this.bumpSpace();\n                    identifierAndLocation = this.parseIdentifierIfPossible();\n                    pluralOffset = result.val;\n                }\n                var optionsResult = this.tryParsePluralOrSelectOptions(nestingLevel, argType, expectingCloseTag, identifierAndLocation);\n                if (optionsResult.err) {\n                    return optionsResult;\n                }\n                var argCloseResult = this.tryParseArgumentClose(openingBracePosition);\n                if (argCloseResult.err) {\n                    return argCloseResult;\n                }\n                var location_2 = createLocation(openingBracePosition, this.clonePosition());\n                if (argType === 'select') {\n                    return {\n                        val: {\n                            type: types_1.TYPE.select,\n                            value: value,\n                            options: fromEntries(optionsResult.val),\n                            location: location_2,\n                        },\n                        err: null,\n                    };\n                }\n                else {\n                    return {\n                        val: {\n                            type: types_1.TYPE.plural,\n                            value: value,\n                            options: fromEntries(optionsResult.val),\n                            offset: pluralOffset,\n                            pluralType: argType === 'plural' ? 'cardinal' : 'ordinal',\n                            location: location_2,\n                        },\n                        err: null,\n                    };\n                }\n            }\n            default:\n                return this.error(error_1.ErrorKind.INVALID_ARGUMENT_TYPE, createLocation(typeStartPosition, typeEndPosition));\n        }\n    };\n    Parser.prototype.tryParseArgumentClose = function (openingBracePosition) {\n        // Parse: {value, number, ::currency/GBP }\n        //\n        if (this.isEOF() || this.char() !== 125 /* `}` */) {\n            return this.error(error_1.ErrorKind.EXPECT_ARGUMENT_CLOSING_BRACE, createLocation(openingBracePosition, this.clonePosition()));\n        }\n        this.bump(); // `}`\n        return { val: true, err: null };\n    };\n    /**\n     * See: https://github.com/unicode-org/icu/blob/af7ed1f6d2298013dc303628438ec4abe1f16479/icu4c/source/common/messagepattern.cpp#L659\n     */\n    Parser.prototype.parseSimpleArgStyleIfPossible = function () {\n        var nestedBraces = 0;\n        var startPosition = this.clonePosition();\n        while (!this.isEOF()) {\n            var ch = this.char();\n            switch (ch) {\n                case 39 /* `'` */: {\n                    // Treat apostrophe as quoting but include it in the style part.\n                    // Find the end of the quoted literal text.\n                    this.bump();\n                    var apostrophePosition = this.clonePosition();\n                    if (!this.bumpUntil(\"'\")) {\n                        return this.error(error_1.ErrorKind.UNCLOSED_QUOTE_IN_ARGUMENT_STYLE, createLocation(apostrophePosition, this.clonePosition()));\n                    }\n                    this.bump();\n                    break;\n                }\n                case 123 /* `{` */: {\n                    nestedBraces += 1;\n                    this.bump();\n                    break;\n                }\n                case 125 /* `}` */: {\n                    if (nestedBraces > 0) {\n                        nestedBraces -= 1;\n                    }\n                    else {\n                        return {\n                            val: this.message.slice(startPosition.offset, this.offset()),\n                            err: null,\n                        };\n                    }\n                    break;\n                }\n                default:\n                    this.bump();\n                    break;\n            }\n        }\n        return {\n            val: this.message.slice(startPosition.offset, this.offset()),\n            err: null,\n        };\n    };\n    Parser.prototype.parseNumberSkeletonFromString = function (skeleton, location) {\n        var tokens = [];\n        try {\n            tokens = icu_skeleton_parser_1.parseNumberSkeletonFromString(skeleton);\n        }\n        catch (e) {\n            return this.error(error_1.ErrorKind.INVALID_NUMBER_SKELETON, location);\n        }\n        return {\n            val: {\n                type: types_1.SKELETON_TYPE.number,\n                tokens: tokens,\n                location: location,\n                parsedOptions: this.shouldParseSkeletons\n                    ? icu_skeleton_parser_1.parseNumberSkeleton(tokens)\n                    : {},\n            },\n            err: null,\n        };\n    };\n    /**\n     * @param nesting_level The current nesting level of messages.\n     *     This can be positive when parsing message fragment in select or plural argument options.\n     * @param parent_arg_type The parent argument's type.\n     * @param parsed_first_identifier If provided, this is the first identifier-like selector of\n     *     the argument. It is a by-product of a previous parsing attempt.\n     * @param expecting_close_tag If true, this message is directly or indirectly nested inside\n     *     between a pair of opening and closing tags. The nested message will not parse beyond\n     *     the closing tag boundary.\n     */\n    Parser.prototype.tryParsePluralOrSelectOptions = function (nestingLevel, parentArgType, expectCloseTag, parsedFirstIdentifier) {\n        var _a;\n        var hasOtherClause = false;\n        var options = [];\n        var parsedSelectors = new Set();\n        var selector = parsedFirstIdentifier.value, selectorLocation = parsedFirstIdentifier.location;\n        // Parse:\n        // one {one apple}\n        // ^--^\n        while (true) {\n            if (selector.length === 0) {\n                var startPosition = this.clonePosition();\n                if (parentArgType !== 'select' && this.bumpIf('=')) {\n                    // Try parse `={number}` selector\n                    var result = this.tryParseDecimalInteger(error_1.ErrorKind.EXPECT_PLURAL_ARGUMENT_SELECTOR, error_1.ErrorKind.INVALID_PLURAL_ARGUMENT_SELECTOR);\n                    if (result.err) {\n                        return result;\n                    }\n                    selectorLocation = createLocation(startPosition, this.clonePosition());\n                    selector = this.message.slice(startPosition.offset, this.offset());\n                }\n                else {\n                    break;\n                }\n            }\n            // Duplicate selector clauses\n            if (parsedSelectors.has(selector)) {\n                return this.error(parentArgType === 'select'\n                    ? error_1.ErrorKind.DUPLICATE_SELECT_ARGUMENT_SELECTOR\n                    : error_1.ErrorKind.DUPLICATE_PLURAL_ARGUMENT_SELECTOR, selectorLocation);\n            }\n            if (selector === 'other') {\n                hasOtherClause = true;\n            }\n            // Parse:\n            // one {one apple}\n            //     ^----------^\n            this.bumpSpace();\n            var openingBracePosition = this.clonePosition();\n            if (!this.bumpIf('{')) {\n                return this.error(parentArgType === 'select'\n                    ? error_1.ErrorKind.EXPECT_SELECT_ARGUMENT_SELECTOR_FRAGMENT\n                    : error_1.ErrorKind.EXPECT_PLURAL_ARGUMENT_SELECTOR_FRAGMENT, createLocation(this.clonePosition(), this.clonePosition()));\n            }\n            var fragmentResult = this.parseMessage(nestingLevel + 1, parentArgType, expectCloseTag);\n            if (fragmentResult.err) {\n                return fragmentResult;\n            }\n            var argCloseResult = this.tryParseArgumentClose(openingBracePosition);\n            if (argCloseResult.err) {\n                return argCloseResult;\n            }\n            options.push([\n                selector,\n                {\n                    value: fragmentResult.val,\n                    location: createLocation(openingBracePosition, this.clonePosition()),\n                },\n            ]);\n            // Keep track of the existing selectors\n            parsedSelectors.add(selector);\n            // Prep next selector clause.\n            this.bumpSpace();\n            (_a = this.parseIdentifierIfPossible(), selector = _a.value, selectorLocation = _a.location);\n        }\n        if (options.length === 0) {\n            return this.error(parentArgType === 'select'\n                ? error_1.ErrorKind.EXPECT_SELECT_ARGUMENT_SELECTOR\n                : error_1.ErrorKind.EXPECT_PLURAL_ARGUMENT_SELECTOR, createLocation(this.clonePosition(), this.clonePosition()));\n        }\n        if (this.requiresOtherClause && !hasOtherClause) {\n            return this.error(error_1.ErrorKind.MISSING_OTHER_CLAUSE, createLocation(this.clonePosition(), this.clonePosition()));\n        }\n        return { val: options, err: null };\n    };\n    Parser.prototype.tryParseDecimalInteger = function (expectNumberError, invalidNumberError) {\n        var sign = 1;\n        var startingPosition = this.clonePosition();\n        if (this.bumpIf('+')) {\n        }\n        else if (this.bumpIf('-')) {\n            sign = -1;\n        }\n        var hasDigits = false;\n        var decimal = 0;\n        while (!this.isEOF()) {\n            var ch = this.char();\n            if (ch >= 48 /* `0` */ && ch <= 57 /* `9` */) {\n                hasDigits = true;\n                decimal = decimal * 10 + (ch - 48);\n                this.bump();\n            }\n            else {\n                break;\n            }\n        }\n        var location = createLocation(startingPosition, this.clonePosition());\n        if (!hasDigits) {\n            return this.error(expectNumberError, location);\n        }\n        decimal *= sign;\n        if (!isSafeInteger(decimal)) {\n            return this.error(invalidNumberError, location);\n        }\n        return { val: decimal, err: null };\n    };\n    Parser.prototype.offset = function () {\n        return this.position.offset;\n    };\n    Parser.prototype.isEOF = function () {\n        return this.offset() === this.message.length;\n    };\n    Parser.prototype.clonePosition = function () {\n        // This is much faster than `Object.assign` or spread.\n        return {\n            offset: this.position.offset,\n            line: this.position.line,\n            column: this.position.column,\n        };\n    };\n    /**\n     * Return the code point at the current position of the parser.\n     * Throws if the index is out of bound.\n     */\n    Parser.prototype.char = function () {\n        var offset = this.position.offset;\n        if (offset >= this.message.length) {\n            throw Error('out of bound');\n        }\n        var code = codePointAt(this.message, offset);\n        if (code === undefined) {\n            throw Error(\"Offset \" + offset + \" is at invalid UTF-16 code unit boundary\");\n        }\n        return code;\n    };\n    Parser.prototype.error = function (kind, location) {\n        return {\n            val: null,\n            err: {\n                kind: kind,\n                message: this.message,\n                location: location,\n            },\n        };\n    };\n    /** Bump the parser to the next UTF-16 code unit. */\n    Parser.prototype.bump = function () {\n        if (this.isEOF()) {\n            return;\n        }\n        var code = this.char();\n        if (code === 10 /* '\\n' */) {\n            this.position.line += 1;\n            this.position.column = 1;\n            this.position.offset += 1;\n        }\n        else {\n            this.position.column += 1;\n            // 0 ~ 0x10000 -> unicode BMP, otherwise skip the surrogate pair.\n            this.position.offset += code < 0x10000 ? 1 : 2;\n        }\n    };\n    /**\n     * If the substring starting at the current position of the parser has\n     * the given prefix, then bump the parser to the character immediately\n     * following the prefix and return true. Otherwise, don't bump the parser\n     * and return false.\n     */\n    Parser.prototype.bumpIf = function (prefix) {\n        if (startsWith(this.message, prefix, this.offset())) {\n            for (var i = 0; i < prefix.length; i++) {\n                this.bump();\n            }\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Bump the parser until the pattern character is found and return `true`.\n     * Otherwise bump to the end of the file and return `false`.\n     */\n    Parser.prototype.bumpUntil = function (pattern) {\n        var currentOffset = this.offset();\n        var index = this.message.indexOf(pattern, currentOffset);\n        if (index >= 0) {\n            this.bumpTo(index);\n            return true;\n        }\n        else {\n            this.bumpTo(this.message.length);\n            return false;\n        }\n    };\n    /**\n     * Bump the parser to the target offset.\n     * If target offset is beyond the end of the input, bump the parser to the end of the input.\n     */\n    Parser.prototype.bumpTo = function (targetOffset) {\n        if (this.offset() > targetOffset) {\n            throw Error(\"targetOffset \" + targetOffset + \" must be greater than or equal to the current offset \" + this.offset());\n        }\n        targetOffset = Math.min(targetOffset, this.message.length);\n        while (true) {\n            var offset = this.offset();\n            if (offset === targetOffset) {\n                break;\n            }\n            if (offset > targetOffset) {\n                throw Error(\"targetOffset \" + targetOffset + \" is at invalid UTF-16 code unit boundary\");\n            }\n            this.bump();\n            if (this.isEOF()) {\n                break;\n            }\n        }\n    };\n    /** advance the parser through all whitespace to the next non-whitespace code unit. */\n    Parser.prototype.bumpSpace = function () {\n        while (!this.isEOF() && _isWhiteSpace(this.char())) {\n            this.bump();\n        }\n    };\n    /**\n     * Peek at the *next* Unicode codepoint in the input without advancing the parser.\n     * If the input has been exhausted, then this returns null.\n     */\n    Parser.prototype.peek = function () {\n        if (this.isEOF()) {\n            return null;\n        }\n        var code = this.char();\n        var offset = this.offset();\n        var nextCode = this.message.charCodeAt(offset + (code >= 0x10000 ? 2 : 1));\n        return nextCode !== null && nextCode !== void 0 ? nextCode : null;\n    };\n    return Parser;\n}());\nexports.Parser = Parser;\n/**\n * This check if codepoint is alphabet (lower & uppercase)\n * @param codepoint\n * @returns\n */\nfunction _isAlpha(codepoint) {\n    return ((codepoint >= 97 && codepoint <= 122) ||\n        (codepoint >= 65 && codepoint <= 90));\n}\nfunction _isAlphaOrSlash(codepoint) {\n    return _isAlpha(codepoint) || codepoint === 47; /* '/' */\n}\n/** See `parseTag` function docs. */\nfunction _isPotentialElementNameChar(c) {\n    return (c === 45 /* '-' */ ||\n        c === 46 /* '.' */ ||\n        (c >= 48 && c <= 57) /* 0..9 */ ||\n        c === 95 /* '_' */ ||\n        (c >= 97 && c <= 122) /** a..z */ ||\n        (c >= 65 && c <= 90) /* A..Z */ ||\n        c == 0xb7 ||\n        (c >= 0xc0 && c <= 0xd6) ||\n        (c >= 0xd8 && c <= 0xf6) ||\n        (c >= 0xf8 && c <= 0x37d) ||\n        (c >= 0x37f && c <= 0x1fff) ||\n        (c >= 0x200c && c <= 0x200d) ||\n        (c >= 0x203f && c <= 0x2040) ||\n        (c >= 0x2070 && c <= 0x218f) ||\n        (c >= 0x2c00 && c <= 0x2fef) ||\n        (c >= 0x3001 && c <= 0xd7ff) ||\n        (c >= 0xf900 && c <= 0xfdcf) ||\n        (c >= 0xfdf0 && c <= 0xfffd) ||\n        (c >= 0x10000 && c <= 0xeffff));\n}\n/**\n * Code point equivalent of regex `\\p{White_Space}`.\n * From: https://www.unicode.org/Public/UCD/latest/ucd/PropList.txt\n */\nfunction _isWhiteSpace(c) {\n    return ((c >= 0x0009 && c <= 0x000d) ||\n        c === 0x0020 ||\n        c === 0x0085 ||\n        (c >= 0x200e && c <= 0x200f) ||\n        c === 0x2028 ||\n        c === 0x2029);\n}\n/**\n * Code point equivalent of regex `\\p{Pattern_Syntax}`.\n * See https://www.unicode.org/Public/UCD/latest/ucd/PropList.txt\n */\nfunction _isPatternSyntax(c) {\n    return ((c >= 0x0021 && c <= 0x0023) ||\n        c === 0x0024 ||\n        (c >= 0x0025 && c <= 0x0027) ||\n        c === 0x0028 ||\n        c === 0x0029 ||\n        c === 0x002a ||\n        c === 0x002b ||\n        c === 0x002c ||\n        c === 0x002d ||\n        (c >= 0x002e && c <= 0x002f) ||\n        (c >= 0x003a && c <= 0x003b) ||\n        (c >= 0x003c && c <= 0x003e) ||\n        (c >= 0x003f && c <= 0x0040) ||\n        c === 0x005b ||\n        c === 0x005c ||\n        c === 0x005d ||\n        c === 0x005e ||\n        c === 0x0060 ||\n        c === 0x007b ||\n        c === 0x007c ||\n        c === 0x007d ||\n        c === 0x007e ||\n        c === 0x00a1 ||\n        (c >= 0x00a2 && c <= 0x00a5) ||\n        c === 0x00a6 ||\n        c === 0x00a7 ||\n        c === 0x00a9 ||\n        c === 0x00ab ||\n        c === 0x00ac ||\n        c === 0x00ae ||\n        c === 0x00b0 ||\n        c === 0x00b1 ||\n        c === 0x00b6 ||\n        c === 0x00bb ||\n        c === 0x00bf ||\n        c === 0x00d7 ||\n        c === 0x00f7 ||\n        (c >= 0x2010 && c <= 0x2015) ||\n        (c >= 0x2016 && c <= 0x2017) ||\n        c === 0x2018 ||\n        c === 0x2019 ||\n        c === 0x201a ||\n        (c >= 0x201b && c <= 0x201c) ||\n        c === 0x201d ||\n        c === 0x201e ||\n        c === 0x201f ||\n        (c >= 0x2020 && c <= 0x2027) ||\n        (c >= 0x2030 && c <= 0x2038) ||\n        c === 0x2039 ||\n        c === 0x203a ||\n        (c >= 0x203b && c <= 0x203e) ||\n        (c >= 0x2041 && c <= 0x2043) ||\n        c === 0x2044 ||\n        c === 0x2045 ||\n        c === 0x2046 ||\n        (c >= 0x2047 && c <= 0x2051) ||\n        c === 0x2052 ||\n        c === 0x2053 ||\n        (c >= 0x2055 && c <= 0x205e) ||\n        (c >= 0x2190 && c <= 0x2194) ||\n        (c >= 0x2195 && c <= 0x2199) ||\n        (c >= 0x219a && c <= 0x219b) ||\n        (c >= 0x219c && c <= 0x219f) ||\n        c === 0x21a0 ||\n        (c >= 0x21a1 && c <= 0x21a2) ||\n        c === 0x21a3 ||\n        (c >= 0x21a4 && c <= 0x21a5) ||\n        c === 0x21a6 ||\n        (c >= 0x21a7 && c <= 0x21ad) ||\n        c === 0x21ae ||\n        (c >= 0x21af && c <= 0x21cd) ||\n        (c >= 0x21ce && c <= 0x21cf) ||\n        (c >= 0x21d0 && c <= 0x21d1) ||\n        c === 0x21d2 ||\n        c === 0x21d3 ||\n        c === 0x21d4 ||\n        (c >= 0x21d5 && c <= 0x21f3) ||\n        (c >= 0x21f4 && c <= 0x22ff) ||\n        (c >= 0x2300 && c <= 0x2307) ||\n        c === 0x2308 ||\n        c === 0x2309 ||\n        c === 0x230a ||\n        c === 0x230b ||\n        (c >= 0x230c && c <= 0x231f) ||\n        (c >= 0x2320 && c <= 0x2321) ||\n        (c >= 0x2322 && c <= 0x2328) ||\n        c === 0x2329 ||\n        c === 0x232a ||\n        (c >= 0x232b && c <= 0x237b) ||\n        c === 0x237c ||\n        (c >= 0x237d && c <= 0x239a) ||\n        (c >= 0x239b && c <= 0x23b3) ||\n        (c >= 0x23b4 && c <= 0x23db) ||\n        (c >= 0x23dc && c <= 0x23e1) ||\n        (c >= 0x23e2 && c <= 0x2426) ||\n        (c >= 0x2427 && c <= 0x243f) ||\n        (c >= 0x2440 && c <= 0x244a) ||\n        (c >= 0x244b && c <= 0x245f) ||\n        (c >= 0x2500 && c <= 0x25b6) ||\n        c === 0x25b7 ||\n        (c >= 0x25b8 && c <= 0x25c0) ||\n        c === 0x25c1 ||\n        (c >= 0x25c2 && c <= 0x25f7) ||\n        (c >= 0x25f8 && c <= 0x25ff) ||\n        (c >= 0x2600 && c <= 0x266e) ||\n        c === 0x266f ||\n        (c >= 0x2670 && c <= 0x2767) ||\n        c === 0x2768 ||\n        c === 0x2769 ||\n        c === 0x276a ||\n        c === 0x276b ||\n        c === 0x276c ||\n        c === 0x276d ||\n        c === 0x276e ||\n        c === 0x276f ||\n        c === 0x2770 ||\n        c === 0x2771 ||\n        c === 0x2772 ||\n        c === 0x2773 ||\n        c === 0x2774 ||\n        c === 0x2775 ||\n        (c >= 0x2794 && c <= 0x27bf) ||\n        (c >= 0x27c0 && c <= 0x27c4) ||\n        c === 0x27c5 ||\n        c === 0x27c6 ||\n        (c >= 0x27c7 && c <= 0x27e5) ||\n        c === 0x27e6 ||\n        c === 0x27e7 ||\n        c === 0x27e8 ||\n        c === 0x27e9 ||\n        c === 0x27ea ||\n        c === 0x27eb ||\n        c === 0x27ec ||\n        c === 0x27ed ||\n        c === 0x27ee ||\n        c === 0x27ef ||\n        (c >= 0x27f0 && c <= 0x27ff) ||\n        (c >= 0x2800 && c <= 0x28ff) ||\n        (c >= 0x2900 && c <= 0x2982) ||\n        c === 0x2983 ||\n        c === 0x2984 ||\n        c === 0x2985 ||\n        c === 0x2986 ||\n        c === 0x2987 ||\n        c === 0x2988 ||\n        c === 0x2989 ||\n        c === 0x298a ||\n        c === 0x298b ||\n        c === 0x298c ||\n        c === 0x298d ||\n        c === 0x298e ||\n        c === 0x298f ||\n        c === 0x2990 ||\n        c === 0x2991 ||\n        c === 0x2992 ||\n        c === 0x2993 ||\n        c === 0x2994 ||\n        c === 0x2995 ||\n        c === 0x2996 ||\n        c === 0x2997 ||\n        c === 0x2998 ||\n        (c >= 0x2999 && c <= 0x29d7) ||\n        c === 0x29d8 ||\n        c === 0x29d9 ||\n        c === 0x29da ||\n        c === 0x29db ||\n        (c >= 0x29dc && c <= 0x29fb) ||\n        c === 0x29fc ||\n        c === 0x29fd ||\n        (c >= 0x29fe && c <= 0x2aff) ||\n        (c >= 0x2b00 && c <= 0x2b2f) ||\n        (c >= 0x2b30 && c <= 0x2b44) ||\n        (c >= 0x2b45 && c <= 0x2b46) ||\n        (c >= 0x2b47 && c <= 0x2b4c) ||\n        (c >= 0x2b4d && c <= 0x2b73) ||\n        (c >= 0x2b74 && c <= 0x2b75) ||\n        (c >= 0x2b76 && c <= 0x2b95) ||\n        c === 0x2b96 ||\n        (c >= 0x2b97 && c <= 0x2bff) ||\n        (c >= 0x2e00 && c <= 0x2e01) ||\n        c === 0x2e02 ||\n        c === 0x2e03 ||\n        c === 0x2e04 ||\n        c === 0x2e05 ||\n        (c >= 0x2e06 && c <= 0x2e08) ||\n        c === 0x2e09 ||\n        c === 0x2e0a ||\n        c === 0x2e0b ||\n        c === 0x2e0c ||\n        c === 0x2e0d ||\n        (c >= 0x2e0e && c <= 0x2e16) ||\n        c === 0x2e17 ||\n        (c >= 0x2e18 && c <= 0x2e19) ||\n        c === 0x2e1a ||\n        c === 0x2e1b ||\n        c === 0x2e1c ||\n        c === 0x2e1d ||\n        (c >= 0x2e1e && c <= 0x2e1f) ||\n        c === 0x2e20 ||\n        c === 0x2e21 ||\n        c === 0x2e22 ||\n        c === 0x2e23 ||\n        c === 0x2e24 ||\n        c === 0x2e25 ||\n        c === 0x2e26 ||\n        c === 0x2e27 ||\n        c === 0x2e28 ||\n        c === 0x2e29 ||\n        (c >= 0x2e2a && c <= 0x2e2e) ||\n        c === 0x2e2f ||\n        (c >= 0x2e30 && c <= 0x2e39) ||\n        (c >= 0x2e3a && c <= 0x2e3b) ||\n        (c >= 0x2e3c && c <= 0x2e3f) ||\n        c === 0x2e40 ||\n        c === 0x2e41 ||\n        c === 0x2e42 ||\n        (c >= 0x2e43 && c <= 0x2e4f) ||\n        (c >= 0x2e50 && c <= 0x2e51) ||\n        c === 0x2e52 ||\n        (c >= 0x2e53 && c <= 0x2e7f) ||\n        (c >= 0x3001 && c <= 0x3003) ||\n        c === 0x3008 ||\n        c === 0x3009 ||\n        c === 0x300a ||\n        c === 0x300b ||\n        c === 0x300c ||\n        c === 0x300d ||\n        c === 0x300e ||\n        c === 0x300f ||\n        c === 0x3010 ||\n        c === 0x3011 ||\n        (c >= 0x3012 && c <= 0x3013) ||\n        c === 0x3014 ||\n        c === 0x3015 ||\n        c === 0x3016 ||\n        c === 0x3017 ||\n        c === 0x3018 ||\n        c === 0x3019 ||\n        c === 0x301a ||\n        c === 0x301b ||\n        c === 0x301c ||\n        c === 0x301d ||\n        (c >= 0x301e && c <= 0x301f) ||\n        c === 0x3020 ||\n        c === 0x3030 ||\n        c === 0xfd3e ||\n        c === 0xfd3f ||\n        (c >= 0xfe45 && c <= 0xfe46));\n}\n"},"lineCount":1269}},"error":null,"hash":"c2c1634525eb363b0a2be95801522d6a","cacheData":{"env":{}}}